#!/usr/bin/env python3
"""
–û–ø—Ç–∏–º–∏–∑–∞—Ü–∏—è –º–æ–¥–µ–ª–∏ –¥–ª—è —É–º–µ–Ω—å—à–µ–Ω–∏—è —Ä–∞–∑–º–µ—Ä–∞
"""

import tensorflow as tf
import os

def optimize_model():
    """–û–ø—Ç–∏–º–∏–∑–∏—Ä—É–µ—Ç —Å—É—â–µ—Å—Ç–≤—É—é—â—É—é –º–æ–¥–µ–ª—å –¥–ª—è —É–º–µ–Ω—å—à–µ–Ω–∏—è —Ä–∞–∑–º–µ—Ä–∞"""
    
    # –ó–∞–≥—Ä—É–∂–∞–µ–º —Å—É—â–µ—Å—Ç–≤—É—é—â—É—é –º–æ–¥–µ–ª—å
    model_path = "models/trained_model/wake_word_model.h5"
    if not os.path.exists(model_path):
        print("‚ùå –ú–æ–¥–µ–ª—å –Ω–µ –Ω–∞–π–¥–µ–Ω–∞!")
        return
    
    print("üì¶ –ó–∞–≥—Ä—É–∂–∞–µ–º –º–æ–¥–µ–ª—å...")
    model = tf.keras.models.load_model(model_path)
    
    # –°–æ–∑–¥–∞–µ–º –∫–æ–Ω–≤–µ—Ä—Ç–µ—Ä —Å –∫–≤–∞–Ω—Ç–∏–∑–∞—Ü–∏–µ–π
    converter = tf.lite.TFLiteConverter.from_keras_model(model)
    
    # –í–∫–ª—é—á–∞–µ–º –∫–≤–∞–Ω—Ç–∏–∑–∞—Ü–∏—é –¥–ª—è —É–º–µ–Ω—å—à–µ–Ω–∏—è —Ä–∞–∑–º–µ—Ä–∞
    converter.optimizations = [tf.lite.Optimize.DEFAULT]
    
    print("üîß –ö–æ–Ω–≤–µ—Ä—Ç–∏—Ä—É–µ–º —Å –∫–≤–∞–Ω—Ç–∏–∑–∞—Ü–∏–µ–π...")
    try:
        tflite_model = converter.convert()
        
        # –°–æ—Ö—Ä–∞–Ω—è–µ–º –æ–ø—Ç–∏–º–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω—É—é –º–æ–¥–µ–ª—å
        optimized_path = "models/trained_model/wake_word_model_optimized.tflite"
        with open(optimized_path, 'wb') as f:
            f.write(tflite_model)
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ä–∞–∑–º–µ—Ä
        original_size = os.path.getsize("models/trained_model/wake_word_model.tflite")
        optimized_size = os.path.getsize(optimized_path)
        
        print(f"‚úÖ –û–ø—Ç–∏–º–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω–∞—è –º–æ–¥–µ–ª—å —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∞: {optimized_path}")
        print(f"üìä –†–∞–∑–º–µ—Ä –æ—Ä–∏–≥–∏–Ω–∞–ª—å–Ω–æ–π –º–æ–¥–µ–ª–∏: {original_size / 1024:.1f} KB")
        print(f"üìä –†–∞–∑–º–µ—Ä –æ–ø—Ç–∏–º–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω–æ–π –º–æ–¥–µ–ª–∏: {optimized_size / 1024:.1f} KB")
        print(f"üìä –£–º–µ–Ω—å—à–µ–Ω–∏–µ: {((original_size - optimized_size) / original_size * 100):.1f}%")
        
        # –ó–∞–º–µ–Ω—è–µ–º –æ—Ä–∏–≥–∏–Ω–∞–ª—å–Ω—É—é –º–æ–¥–µ–ª—å
        os.replace(optimized_path, "models/trained_model/wake_word_model.tflite")
        print("üîÑ –ó–∞–º–µ–Ω–µ–Ω–∞ –æ—Ä–∏–≥–∏–Ω–∞–ª—å–Ω–∞—è –º–æ–¥–µ–ª—å")
        
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–ø—Ç–∏–º–∏–∑–∞—Ü–∏–∏: {e}")

if __name__ == "__main__":
    optimize_model()