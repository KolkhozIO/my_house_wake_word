#!/bin/bash

echo "=== –ê–í–¢–û–ú–ê–¢–ò–ß–ï–°–ö–ò–ô –ú–û–ù–ò–¢–û–†–ò–ù–ì –ü–ê–ô–ü–õ–ê–ô–ù–ê ==="
echo "–í—Ä–µ–º—è: $(date)"
echo ""

# –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—Ç–∞—Ç—É—Å–∞ –∑–∞–¥–∞—á
echo "üìã –°–¢–ê–¢–£–° –ó–ê–î–ê–ß:"
./manage_tasks.sh status
echo ""

# –ü—Ä–æ–≤–µ—Ä–∫–∞ –ª–æ–≥–æ–≤ –∞–∫—Ç–∏–≤–Ω—ã—Ö –∑–∞–¥–∞—á
echo "üìä –õ–û–ì–ò –ê–ö–¢–ò–í–ù–´–• –ó–ê–î–ê–ß:"
if ./manage_tasks.sh status | grep -q "train_model.*running"; then
    echo "üîÑ train_model (–æ–±—É—á–µ–Ω–∏–µ –º–æ–¥–µ–ª–∏):"
    tail -3 training.log 2>/dev/null || echo "–õ–æ–≥ –Ω–µ –Ω–∞–π–¥–µ–Ω"
fi
echo ""

# –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ä–µ—Å—É—Ä—Å–æ–≤ —Å–∏—Å—Ç–µ–º—ã
echo "üíª –†–ï–°–£–†–°–´ –°–ò–°–¢–ï–ú–´:"
echo "CPU: $(top -bn1 | grep "Cpu(s)" | awk '{print $2}' | cut -d'%' -f1)%"
echo "RAM: $(free -h | grep Mem | awk '{print $3"/"$2}')"
echo "–î–∏—Å–∫: $(df -h /home/microWakeWord_data | tail -1 | awk '{print $3"/"$2" ("$5")"}')"
echo ""

# –ü—Ä–æ–≤–µ—Ä–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–Ω—ã—Ö —ç—Ç–∞–ø–æ–≤
echo "‚úÖ –ó–ê–í–ï–†–®–ï–ù–ù–´–ï –≠–¢–ê–ü–´:"
echo "negatives_real: $(find /home/microWakeWord_data/negatives_real_sampled -name "*.wav" 2>/dev/null | wc -l) —Å–µ–º–ø–ª–æ–≤"
echo "background_data: $(find /home/microWakeWord_data/background_data_sampled -name "*.wav" 2>/dev/null | wc -l) —Å–µ–º–ø–ª–æ–≤"
echo ""

# –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å–æ–∑–¥–∞–Ω–Ω—ã—Ö –º–æ–¥–µ–ª–µ–π
echo "üéØ –°–û–ó–î–ê–ù–ù–´–ï –ú–û–î–ï–õ–ò:"
ls -la /home/microWakeWord_data/model_*.tflite 2>/dev/null | tail -3 || echo "–ú–æ–¥–µ–ª–∏ –µ—â–µ –Ω–µ —Å–æ–∑–¥–∞–Ω—ã"
echo ""

# –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏–µ –¥–µ–π—Å—Ç–≤–∏—è
echo "ü§ñ –ê–í–¢–û–ú–ê–¢–ò–ß–ï–°–ö–ò–ï –î–ï–ô–°–¢–í–ò–Ø:"

# –ï—Å–ª–∏ –æ–±—É—á–µ–Ω–∏–µ –∑–∞–≤–µ—Ä—à–∏–ª–æ—Å—å, –ø—Ä–æ–≤–µ—Ä—è–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç
if ./manage_tasks.sh status | grep -q "train_model.*finished"; then
    echo "üéâ –û–±—É—á–µ–Ω–∏–µ –∑–∞–≤–µ—Ä—à–µ–Ω–æ! –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç..."
    
    # –ò—â–µ–º –ø–æ—Å–ª–µ–¥–Ω—é—é —Å–æ–∑–¥–∞–Ω–Ω—É—é –º–æ–¥–µ–ª—å
    latest_model=$(ls -t /home/microWakeWord_data/model_*.tflite 2>/dev/null | head -1)
    if [ -n "$latest_model" ]; then
        echo "‚úÖ –ü–æ—Å–ª–µ–¥–Ω—è—è –º–æ–¥–µ–ª—å: $(basename $latest_model)"
        echo "üìä –†–∞–∑–º–µ—Ä: $(ls -lh $latest_model | awk '{print $5}')"
        
        # –ò—â–µ–º —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É—é—â–∏–π –º–∞–Ω–∏—Ñ–µ—Å—Ç
        manifest_file="${latest_model%.tflite}.json"
        if [ -f "$manifest_file" ]; then
            echo "‚úÖ –ú–∞–Ω–∏—Ñ–µ—Å—Ç: $(basename $manifest_file)"
        fi
        
        echo "üéØ –ü–∞–π–ø–ª–∞–π–Ω –ø–æ–ª–Ω–æ—Å—Ç—å—é –∑–∞–≤–µ—Ä—à–µ–Ω!"
    else
        echo "‚ùå –ú–æ–¥–µ–ª—å –Ω–µ –Ω–∞–π–¥–µ–Ω–∞!"
    fi
fi

echo ""

# –ü—Ä–æ–≤–µ—Ä–∫–∞ –æ—à–∏–±–æ–∫ —Å–∏—Å—Ç–µ–º—ã
echo "üö® –ü–†–û–í–ï–†–ö–ê –û–®–ò–ë–û–ö:"
if dmesg | tail -10 | grep -i "killed\|oom\|error" > /dev/null; then
    echo "‚ö†Ô∏è –ù–∞–π–¥–µ–Ω—ã –æ—à–∏–±–∫–∏ –≤ —Å–∏—Å—Ç–µ–º–Ω—ã—Ö –ª–æ–≥–∞—Ö!"
    dmesg | tail -5 | grep -i "killed\|oom\|error"
else
    echo "‚úÖ –°–∏—Å—Ç–µ–º–Ω—ã—Ö –æ—à–∏–±–æ–∫ –Ω–µ –Ω–∞–π–¥–µ–Ω–æ"
fi
echo ""

echo "=== –°–õ–ï–î–£–Æ–©–ê–Ø –ü–†–û–í–ï–†–ö–ê –ß–ï–†–ï–ó 10 –ú–ò–ù–£–¢ ==="
echo ""

