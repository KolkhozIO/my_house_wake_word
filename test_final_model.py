#!/usr/bin/env python3
"""
–¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Ñ–∏–Ω–∞–ª—å–Ω–æ–π –º–æ–¥–µ–ª–∏ microWakeWord
"""

import sys
import os
sys.path.append('/home/microWakeWord')

import numpy as np
import tensorflow as tf
from pathlib import Path

def test_tflite_model():
    """–¢–µ—Å—Ç–∏—Ä—É–µ—Ç TFLite –º–æ–¥–µ–ª—å"""
    
    model_path = "/home/microWakeWord_data/trained_models/wakeword/model.tflite"
    
    print("üîÑ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ TFLite –º–æ–¥–µ–ª–∏...")
    
    try:
        # –ó–∞–≥—Ä—É–∂–∞–µ–º TFLite –º–æ–¥–µ–ª—å
        interpreter = tf.lite.Interpreter(model_path=model_path)
        interpreter.allocate_tensors()
        
        # –ü–æ–ª—É—á–∞–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –≤—Ö–æ–¥–µ –∏ –≤—ã—Ö–æ–¥–µ
        input_details = interpreter.get_input_details()
        output_details = interpreter.get_output_details()
        
        print(f"üìä –í—Ö–æ–¥–Ω—ã–µ –¥–µ—Ç–∞–ª–∏: {input_details}")
        print(f"üìä –í—ã—Ö–æ–¥–Ω—ã–µ –¥–µ—Ç–∞–ª–∏: {output_details}")
        
        # –°–æ–∑–¥–∞–µ–º —Ç–µ—Å—Ç–æ–≤—ã–µ –¥–∞–Ω–Ω—ã–µ (—Å–ª—É—á–∞–π–Ω—ã–µ —Å–ø–µ–∫—Ç—Ä–æ–≥—Ä–∞–º–º—ã)
        input_shape = input_details[0]['shape']
        print(f"üìä –§–æ—Ä–º–∞ –≤—Ö–æ–¥–∞: {input_shape}")
        
        # –°–æ–∑–¥–∞–µ–º —Ç–µ—Å—Ç–æ–≤—ã–µ –¥–∞–Ω–Ω—ã–µ
        test_data = np.random.random(input_shape).astype(np.float32)
        
        # –ó–∞–ø—É—Å–∫–∞–µ–º –∏–Ω—Ñ–µ—Ä–µ–Ω—Å
        interpreter.set_tensor(input_details[0]['index'], test_data)
        interpreter.invoke()
        
        # –ü–æ–ª—É—á–∞–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç
        output_data = interpreter.get_tensor(output_details[0]['index'])
        
        print(f"‚úÖ –ò–Ω—Ñ–µ—Ä–µ–Ω—Å —É—Å–ø–µ—à–µ–Ω!")
        print(f"üìä –§–æ—Ä–º–∞ –≤—ã—Ö–æ–¥–∞: {output_data.shape}")
        print(f"üìä –ó–Ω–∞—á–µ–Ω–∏—è –≤—ã—Ö–æ–¥–∞: {output_data}")
        
        return True
        
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è: {e}")
        return False

if __name__ == "__main__":
    success = test_tflite_model()
    if success:
        print("üéâ –ú–æ–¥–µ–ª—å —Ä–∞–±–æ—Ç–∞–µ—Ç –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ!")
    else:
        print("‚ùå –ú–æ–¥–µ–ª—å –Ω–µ —Ä–∞–±–æ—Ç–∞–µ—Ç")
        sys.exit(1)