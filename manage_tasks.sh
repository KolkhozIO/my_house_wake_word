#!/bin/bash

# –°–∫—Ä–∏–ø—Ç —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –∑–∞–¥–∞—á–∞–º–∏ microWakeWord
# –ù–ï –†–ï–î–ê–ö–¢–ò–†–û–í–ê–¢–¨ - –¢–û–õ–¨–ö–û –ß–ò–¢–ê–¢–¨!

# –¶–≤–µ—Ç–∞ –¥–ª—è –≤—ã–≤–æ–¥–∞
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
BLUE='\033[0;34m'
NC='\033[0m' # No Color

# –§—É–Ω–∫—Ü–∏—è –ø–æ–∫–∞–∑–∞ –ø–æ–º–æ—â–∏
show_help() {
    echo -e "${BLUE}microWakeWord Task Manager${NC}"
    echo "=========================="
    echo ""
    echo "–ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ: $0 <–∫–æ–º–∞–Ω–¥–∞> [–∑–∞–¥–∞—á–∞]"
    echo ""
    echo "–ö–æ–º–∞–Ω–¥—ã:"
    echo "  start <task>     - –ó–∞–ø—É—Å—Ç–∏—Ç—å –∑–∞–¥–∞—á—É –≤ —Ñ–æ–Ω–æ–≤–æ–º —Ä–µ–∂–∏–º–µ"
    echo "  stop <task>      - –û—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –∑–∞–¥–∞—á—É"
    echo "  status           - –ü–æ–∫–∞–∑–∞—Ç—å —Å—Ç–∞—Ç—É—Å –≤—Å–µ—Ö –∑–∞–¥–∞—á"
    echo "  logs <task>      - –ü–æ–∫–∞–∑–∞—Ç—å –ª–æ–≥–∏ –∑–∞–¥–∞—á–∏"
    echo "  list             - –ü–æ–∫–∞–∑–∞—Ç—å —Å–ø–∏—Å–æ–∫ –¥–æ—Å—Ç—É–ø–Ω—ã—Ö –∑–∞–¥–∞—á"
    echo "  stop-all         - –û—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –≤—Å–µ –∑–∞–¥–∞—á–∏"
    echo "  cleanup          - –û—á–∏—Å—Ç–∏—Ç—å –≤—Ä–µ–º–µ–Ω–Ω—ã–µ —Ñ–∞–π–ª—ã"
    echo ""
    echo "–î–æ—Å—Ç—É–ø–Ω—ã–µ –∑–∞–¥–∞—á–∏:"
    echo "  –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ '$0 list' –¥–ª—è –ø—Ä–æ—Å–º–æ—Ç—Ä–∞ –≤—Å–µ—Ö –¥–æ—Å—Ç—É–ø–Ω—ã—Ö –∑–∞–¥–∞—á"
    echo ""
    echo "–ü—Ä–∏–º–µ—Ä—ã:"
    echo "  $0 start train_model"
    echo "  $0 status"
    echo "  $0 logs train_model"
    echo "  $0 stop train_model"
}

# –§—É–Ω–∫—Ü–∏—è –∑–∞–ø—É—Å–∫–∞ –∑–∞–¥–∞—á–∏
start_task() {
    local task="$1"
    
    if [ -z "$task" ]; then
        echo -e "${RED}‚ùå –û—à–∏–±–∫–∞: –ù–µ —É–∫–∞–∑–∞–Ω–∞ –∑–∞–¥–∞—á–∞${NC}"
        show_help
        exit 1
    fi
    
    echo -e "${BLUE}üöÄ –ó–∞–ø—É—Å–∫ –∑–∞–¥–∞—á–∏: $task${NC}"
    
    # –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—É—â–µ—Å—Ç–≤–æ–≤–∞–Ω–∏—è –∑–∞–¥–∞—á–∏ —á–µ—Ä–µ–∑ task_manager.py
    if [ -f "src/management/task_manager.py" ]; then
        validation_result=$(source .venv/bin/activate && python3 src/management/task_manager.py validate "$task" 2>&1)
        if echo "$validation_result" | grep -q "‚úÖ –ó–∞–¥–∞—á–∞"; then
            echo -e "${GREEN}‚úÖ –ó–∞–¥–∞—á–∞ $task –Ω–∞–π–¥–µ–Ω–∞${NC}"
        else
            echo -e "${RED}‚ùå –û—à–∏–±–∫–∞: –ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –∑–∞–¥–∞—á–∞: $task${NC}"
            echo -e "${YELLOW}üí° –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ '$0 list' –¥–ª—è –ø—Ä–æ—Å–º–æ—Ç—Ä–∞ –¥–æ—Å—Ç—É–ø–Ω—ã—Ö –∑–∞–¥–∞—á${NC}"
            exit 1
        fi
    else
        echo -e "${RED}‚ùå –û—à–∏–±–∫–∞: task_manager.py –Ω–µ –Ω–∞–π–¥–µ–Ω${NC}"
        exit 1
    fi
    
    # –ó–∞–ø—É—Å–∫ —á–µ—Ä–µ–∑ Python –º–µ–Ω–µ–¥–∂–µ—Ä
    if [ -f "src/management/task_manager.py" ]; then
        echo -e "${BLUE}üìã –ó–∞–ø—É—Å–∫ —á–µ—Ä–µ–∑ task_manager.py${NC}"
        source .venv/bin/activate && python3 src/management/task_manager.py start "$task"
    else
        echo -e "${RED}‚ùå –û—à–∏–±–∫–∞: task_manager.py –Ω–µ –Ω–∞–π–¥–µ–Ω${NC}"
        exit 1
    fi
}

# –§—É–Ω–∫—Ü–∏—è –æ—Å—Ç–∞–Ω–æ–≤–∫–∏ –∑–∞–¥–∞—á–∏
stop_task() {
    local task="$1"
    
    if [ -z "$task" ]; then
        echo -e "${RED}‚ùå –û—à–∏–±–∫–∞: –ù–µ —É–∫–∞–∑–∞–Ω–∞ –∑–∞–¥–∞—á–∞${NC}"
        show_help
        exit 1
    fi
    
    echo -e "${YELLOW}üõë –û—Å—Ç–∞–Ω–æ–≤–∫–∞ –∑–∞–¥–∞—á–∏: $task${NC}"
    
    if [ -f "src/management/task_manager.py" ]; then
        source .venv/bin/activate && python3 src/management/task_manager.py stop "$task"
    else
        echo -e "${RED}‚ùå –û—à–∏–±–∫–∞: task_manager.py –Ω–µ –Ω–∞–π–¥–µ–Ω${NC}"
        exit 1
    fi
}

# –§—É–Ω–∫—Ü–∏—è –ø–æ–∫–∞–∑–∞ —Å—Ç–∞—Ç—É—Å–∞
show_status() {
    echo -e "${BLUE}üìä –°—Ç–∞—Ç—É—Å –∑–∞–¥–∞—á microWakeWord${NC}"
    echo "=============================="
    
    if [ -f "src/management/task_manager.py" ]; then
        source .venv/bin/activate && python3 src/management/task_manager.py status
    else
        echo -e "${RED}‚ùå –û—à–∏–±–∫–∞: task_manager.py –Ω–µ –Ω–∞–π–¥–µ–Ω${NC}"
        exit 1
    fi
}

# –§—É–Ω–∫—Ü–∏—è –ø–æ–∫–∞–∑–∞ –ª–æ–≥–æ–≤
show_logs() {
    local task="$1"
    
    if [ -z "$task" ]; then
        echo -e "${RED}‚ùå –û—à–∏–±–∫–∞: –ù–µ —É–∫–∞–∑–∞–Ω–∞ –∑–∞–¥–∞—á–∞${NC}"
        show_help
        exit 1
    fi
    
    echo -e "${BLUE}üìã –õ–æ–≥–∏ –∑–∞–¥–∞—á–∏: $task${NC}"
    echo "========================"
    
    if [ -f "src/management/task_manager.py" ]; then
        source .venv/bin/activate && python3 src/management/task_manager.py logs "$task"
    else
        echo -e "${RED}‚ùå –û—à–∏–±–∫–∞: task_manager.py –Ω–µ –Ω–∞–π–¥–µ–Ω${NC}"
        exit 1
    fi
}

# –§—É–Ω–∫—Ü–∏—è –ø–æ–∫–∞–∑–∞ —Å–ø–∏—Å–∫–∞ –∑–∞–¥–∞—á
show_list() {
    if [ -f "src/management/task_manager.py" ]; then
        source .venv/bin/activate && python3 src/management/task_manager.py list
    else
        echo -e "${RED}‚ùå –û—à–∏–±–∫–∞: task_manager.py –Ω–µ –Ω–∞–π–¥–µ–Ω${NC}"
        exit 1
    fi
}

# –§—É–Ω–∫—Ü–∏—è –æ—Å—Ç–∞–Ω–æ–≤–∫–∏ –≤—Å–µ—Ö –∑–∞–¥–∞—á
stop_all_tasks() {
    echo -e "${YELLOW}üõë –û—Å—Ç–∞–Ω–æ–≤–∫–∞ –≤—Å–µ—Ö –∑–∞–¥–∞—á${NC}"
    
    if [ -f "src/management/task_manager.py" ]; then
        source .venv/bin/activate && python3 src/management/task_manager.py stop-all
    else
        echo -e "${RED}‚ùå –û—à–∏–±–∫–∞: task_manager.py –Ω–µ –Ω–∞–π–¥–µ–Ω${NC}"
        exit 1
    fi
}

# –§—É–Ω–∫—Ü–∏—è –æ—á–∏—Å—Ç–∫–∏
cleanup() {
    echo -e "${YELLOW}üßπ –û—á–∏—Å—Ç–∫–∞ –≤—Ä–µ–º–µ–Ω–Ω—ã—Ö —Ñ–∞–π–ª–æ–≤${NC}"
    
    # –û—á–∏—Å—Ç–∫–∞ –≤—Ä–µ–º–µ–Ω–Ω—ã—Ö –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–π
    if [ -d "temp" ]; then
        echo -e "${BLUE}üìÅ –û—á–∏—Å—Ç–∫–∞ temp/...${NC}"
        rm -rf temp/*
    fi
    
    if [ -d "positives_both_aug_temp" ]; then
        echo -e "${BLUE}üìÅ –û—á–∏—Å—Ç–∫–∞ positives_both_aug_temp/...${NC}"
        rm -rf positives_both_aug_temp/*
    fi
    
    echo -e "${GREEN}‚úÖ –û—á–∏—Å—Ç–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞${NC}"
}

# –û—Å–Ω–æ–≤–Ω–∞—è –ª–æ–≥–∏–∫–∞
case "$1" in
    "start")
        start_task "$2"
        ;;
    "stop")
        stop_task "$2"
        ;;
    "status")
        show_status
        ;;
    "logs")
        show_logs "$2"
        ;;
    "list")
        show_list
        ;;
    "stop-all")
        stop_all_tasks
        ;;
    "cleanup")
        cleanup
        ;;
    "help"|"-h"|"--help"|"")
        show_help
        ;;
    *)
        echo -e "${RED}‚ùå –û—à–∏–±–∫–∞: –ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –∫–æ–º–∞–Ω–¥–∞: $1${NC}"
        echo ""
        show_help
        exit 1
        ;;
esac