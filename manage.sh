#!/bin/bash
# –ï–¥–∏–Ω—ã–π —Å–∫—Ä–∏–ø—Ç —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è microWakeWord
# –°–û–ë–õ–Æ–î–ï–ù–ò–ï –í–°–ï–• –ü–†–ê–í–ò–õ –ü–†–û–ï–ö–¢–ê
# üö® –í–°–ï–ì–î–ê –¢–û–õ–¨–ö–û –ß–ï–†–ï–ó –°–ò–°–¢–ï–ú–£ –¢–ê–°–ö–û–í!

# –¶–≤–µ—Ç–∞ –¥–ª—è –≤—ã–≤–æ–¥–∞
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
BLUE='\033[0;34m'
PURPLE='\033[0;35m'
CYAN='\033[0;36m'
NC='\033[0m' # No Color

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –≤—ã–≤–æ–¥–∞ –∑–∞–≥–æ–ª–æ–≤–∫–æ–≤
print_header() {
    echo -e "${CYAN}================================${NC}"
    echo -e "${CYAN}$1${NC}"
    echo -e "${CYAN}================================${NC}"
}

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –≤—ã–≤–æ–¥–∞ —Å—Ç–∞—Ç—É—Å–∞
print_status() {
    echo -e "${GREEN}‚úÖ $1${NC}"
}

print_error() {
    echo -e "${RED}‚ùå $1${NC}"
}

print_warning() {
    echo -e "${YELLOW}‚ö†Ô∏è $1${NC}"
}

print_info() {
    echo -e "${BLUE}‚ÑπÔ∏è $1${NC}"
}

# –ü—Ä–æ–≤–µ—Ä–∫–∞ –≤–∏—Ä—Ç—É–∞–ª—å–Ω–æ–≥–æ –æ–∫—Ä—É–∂–µ–Ω–∏—è
check_venv() {
    if [ ! -d ".venv" ]; then
        print_error "–í–∏—Ä—Ç—É–∞–ª—å–Ω–æ–µ –æ–∫—Ä—É–∂–µ–Ω–∏–µ –Ω–µ –Ω–∞–π–¥–µ–Ω–æ!"
        print_info "–°–æ–∑–¥–∞–π—Ç–µ –≤–∏—Ä—Ç—É–∞–ª—å–Ω–æ–µ –æ–∫—Ä—É–∂–µ–Ω–∏–µ: python -m venv .venv"
        exit 1
    fi
}

# –ê–∫—Ç–∏–≤–∞—Ü–∏—è –≤–∏—Ä—Ç—É–∞–ª—å–Ω–æ–≥–æ –æ–∫—Ä—É–∂–µ–Ω–∏—è
activate_venv() {
    source .venv/bin/activate
}

# üö® –ö–†–ò–¢–ò–ß–ï–°–ö–û–ï –ü–†–ê–í–ò–õ–û: –í–°–ï–ì–î–ê –¢–û–õ–¨–ö–û –ß–ï–†–ï–ó –°–ò–°–¢–ï–ú–£ –¢–ê–°–ö–û–í!
# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –∑–∞–ø—É—Å–∫–∞ –∑–∞–¥–∞—á —á–µ—Ä–µ–∑ task_manager.py
start_task() {
    local task_name="$1"
    local command="$2"
    local description="$3"
    
    print_header "$description"
    check_venv
    activate_venv
    
    # üö® –í–°–ï–ì–î–ê –¢–û–õ–¨–ö–û –ß–ï–†–ï–ó –°–ò–°–¢–ï–ú–£ –¢–ê–°–ö–û–í!
    python src/management/task_manager.py start "$task_name" "$command"
    
    if [ $? -eq 0 ]; then
        print_status "–ó–∞–¥–∞—á–∞ '$task_name' –∑–∞–ø—É—â–µ–Ω–∞ –≤ —Ñ–æ–Ω–µ"
        print_info "–î–ª—è –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–∞: ./manage.sh pipeline status"
        print_info "–î–ª—è –ª–æ–≥–æ–≤: ./manage.sh pipeline logs $task_name"
    else
        print_error "–û—à–∏–±–∫–∞ –∑–∞–ø—É—Å–∫–∞ –∑–∞–¥–∞—á–∏ '$task_name'"
        exit 1
    fi
}

# –û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è
main() {
    case "$1" in
        "pipeline")
            case "$2" in
                "start")
                    check_venv
                    activate_venv
                    
                    case "$3" in
                        "--parallel")
                            print_header "üöÄ –ó–ê–ü–£–°–ö –ü–ê–†–ê–õ–õ–ï–õ–¨–ù–û–ì–û –ü–ê–ô–ü–õ–ê–ô–ù–ê"
                            python src/management/parallel_pipeline_manager.py
                            ;;
                        "--cyclic")
                            print_header "üöÄ –ó–ê–ü–£–°–ö –¶–ò–ö–õ–ò–ß–ï–°–ö–û–ì–û –ü–ê–ô–ü–õ–ê–ô–ù–ê"
                            python src/management/cyclic_pipeline_manager.py
                            ;;
                        "--sequential"|"")
                            print_header "üöÄ –ó–ê–ü–£–°–ö –ü–û–°–õ–ï–î–û–í–ê–¢–ï–õ–¨–ù–û–ì–û –ü–ê–ô–ü–õ–ê–ô–ù–ê"
                            python src/management/start_pipeline.py
                            ;;
                        *)
                            print_error "–ù–µ–∏–∑–≤–µ—Å—Ç–Ω—ã–π —Ä–µ–∂–∏–º: $3"
                            print_info "–î–æ—Å—Ç—É–ø–Ω—ã–µ —Ä–µ–∂–∏–º—ã: --parallel, --cyclic, --sequential"
                            exit 1
                            ;;
                    esac
                    ;;
                "status")
                    print_header "üìä –°–¢–ê–¢–£–° –ü–ê–ô–ü–õ–ê–ô–ù–ê"
                    activate_venv
                    python src/management/task_manager.py status
                    ;;
                "logs")
                    print_header "üìã –õ–û–ì–ò –ü–ê–ô–ü–õ–ê–ô–ù–ê"
                    activate_venv
                    if [ -n "$3" ]; then
                        python src/management/task_manager.py logs "$3"
                    else
                        print_info "–ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ: ./manage.sh pipeline logs <task_name>"
                    fi
                    ;;
                "stop")
                    print_header "üõë –û–°–¢–ê–ù–û–í–ö–ê –ü–ê–ô–ü–õ–ê–ô–ù–ê"
                    activate_venv
                    if [ -n "$3" ]; then
                        python src/management/task_manager.py stop "$3"
                    else
                        python src/management/task_manager.py stop-all
                    fi
                    ;;
                "cleanup")
                    print_header "üßπ –û–ß–ò–°–¢–ö–ê –ü–ê–ô–ü–õ–ê–ô–ù–ê"
                    activate_venv
                    python src/management/task_manager.py cleanup
                    ;;
                *)
                    print_error "–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –∫–æ–º–∞–Ω–¥–∞ –ø–∞–π–ø–ª–∞–π–Ω–∞: $2"
                    print_info "–î–æ—Å—Ç—É–ø–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã: start, status, logs, stop, cleanup"
                    exit 1
                    ;;
            esac
            ;;
        "data")
            case "$2" in
                "generate")
                    case "$3" in
                        "--quick")
                            start_task "generate_data_quick" \
                                'source .venv/bin/activate && python src/pipeline/data_generation/quick_generate.py' \
                                "‚ö° –ë–´–°–¢–†–ê–Ø –ì–ï–ù–ï–†–ê–¶–ò–Ø –î–ê–ù–ù–´–•"
                            ;;
                        "--tts"|"")
                            start_task "generate_data_tts" \
                                'source .venv/bin/activate && python src/pipeline/data_generation/generate_both_phrases.py' \
                                "üé§ –ì–ï–ù–ï–†–ê–¶–ò–Ø TTS –î–ê–ù–ù–´–•"
                            ;;
                        *)
                            print_error "–ù–µ–∏–∑–≤–µ—Å—Ç–Ω—ã–π —Ä–µ–∂–∏–º –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏: $3"
                            print_info "–î–æ—Å—Ç—É–ø–Ω—ã–µ —Ä–µ–∂–∏–º—ã: --quick, --tts"
                            exit 1
                            ;;
                    esac
                    ;;
                "augment")
                    start_task "augmentations" \
                        'source .venv/bin/activate && python src/pipeline/augmentation/apply_augmentations.py' \
                        "üé® –ü–†–ò–ú–ï–ù–ï–ù–ò–ï –ê–£–ì–ú–ï–ù–¢–ê–¶–ò–ô"
                    ;;
                "balance")
                    start_task "balance_dataset" \
                        'source .venv/bin/activate && python src/pipeline/balancing/balance_dataset.py' \
                        "‚öñÔ∏è –ë–ê–õ–ê–ù–°–ò–†–û–í–ö–ê –î–ê–¢–ê–°–ï–¢–ê"
                    ;;
                "mix")
                    case "$3" in
                        "--conservative")
                            start_task "mix_conservative" \
                                'source .venv/bin/activate && python src/pipeline/data_generation/mix_tts_with_real_noise.py --variant=conservative' \
                                "üîä –ö–û–ù–°–ï–†–í–ê–¢–ò–í–ù–û–ï –°–ú–ï–®–ò–í–ê–ù–ò–ï TTS –° –®–£–ú–û–ú"
                            ;;
                        "--moderate")
                            start_task "mix_moderate" \
                                'source .venv/bin/activate && python src/pipeline/data_generation/mix_tts_with_real_noise.py --variant=moderate' \
                                "üîä –£–ú–ï–†–ï–ù–ù–û–ï –°–ú–ï–®–ò–í–ê–ù–ò–ï TTS –° –®–£–ú–û–ú"
                            ;;
                        "--aggressive")
                            start_task "mix_aggressive" \
                                'source .venv/bin/activate && python src/pipeline/data_generation/mix_tts_with_real_noise.py --variant=aggressive' \
                                "üîä –ê–ì–†–ï–°–°–ò–í–ù–û–ï –°–ú–ï–®–ò–í–ê–ù–ò–ï TTS –° –®–£–ú–û–ú"
                            ;;
                        "--extreme")
                            start_task "mix_extreme" \
                                'source .venv/bin/activate && python src/pipeline/data_generation/mix_tts_with_real_noise.py --variant=extreme' \
                                "üîä –≠–ö–°–¢–†–ï–ú–ê–õ–¨–ù–û–ï –°–ú–ï–®–ò–í–ê–ù–ò–ï TTS –° –®–£–ú–û–ú"
                            ;;
                        "--all")
                            start_task "mix_all_variants" \
                                'source .venv/bin/activate && python src/pipeline/data_generation/mix_tts_with_real_noise.py --variant=conservative && python src/pipeline/data_generation/mix_tts_with_real_noise.py --variant=moderate && python src/pipeline/data_generation/mix_tts_with_real_noise.py --variant=aggressive && python src/pipeline/data_generation/mix_tts_with_real_noise.py --variant=extreme' \
                                "üîä –°–ú–ï–®–ò–í–ê–ù–ò–ï –í–°–ï–• –í–ê–†–ò–ê–ù–¢–û–í TTS –° –®–£–ú–û–ú"
                            ;;
                        "--test")
                            start_task "mix_test" \
                                'source .venv/bin/activate && python src/pipeline/data_generation/mix_tts_with_real_noise.py --variant=moderate --test' \
                                "üß™ –¢–ï–°–¢–û–í–û–ï –°–ú–ï–®–ò–í–ê–ù–ò–ï TTS –° –®–£–ú–û–ú"
                            ;;
                        *)
                            print_error "–ù–µ–∏–∑–≤–µ—Å—Ç–Ω—ã–π –≤–∞—Ä–∏–∞–Ω—Ç —Å–º–µ—à–∏–≤–∞–Ω–∏—è: $3"
                            print_info "–î–æ—Å—Ç—É–ø–Ω—ã–µ –≤–∞—Ä–∏–∞–Ω—Ç—ã: --conservative, --moderate, --aggressive, --extreme, --all, --test"
                            exit 1
                            ;;
                    esac
                    ;;
                *)
                    print_error "–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –∫–æ–º–∞–Ω–¥–∞ –¥–∞–Ω–Ω—ã—Ö: $2"
                    print_info "–î–æ—Å—Ç—É–ø–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã: generate, augment, balance, mix"
                    exit 1
                    ;;
            esac
            ;;
        "model")
            case "$2" in
                "train")
                    case "$3" in
                        "--size=small")
                            start_task "train_small" \
                                'source .venv/bin/activate && python src/pipeline/training/train_model_fast.py' \
                                "üß† –û–ë–£–ß–ï–ù–ò–ï –ú–ê–õ–ï–ù–¨–ö–û–ô –ú–û–î–ï–õ–ò"
                            ;;
                        "--size=medium"|"")
                            start_task "train_model" \
                                'source .venv/bin/activate && python src/pipeline/training/use_original_library_correctly_fixed.py' \
                                "üß† –û–ë–£–ß–ï–ù–ò–ï –°–†–ï–î–ù–ï–ô –ú–û–î–ï–õ–ò"
                            ;;
                        "--size=large")
                            start_task "train_large" \
                                'source .venv/bin/activate && python src/pipeline/training/train_model_expanded.py' \
                                "üß† –û–ë–£–ß–ï–ù–ò–ï –ë–û–õ–¨–®–û–ô –ú–û–î–ï–õ–ò"
                            ;;
                        "--size=real")
                            start_task "train_with_real_data" \
                                'source .venv/bin/activate && python src/pipeline/training/train_with_real_data_optimized.py' \
                                "üéØ –û–ü–¢–ò–ú–ò–ó–ò–†–û–í–ê–ù–ù–û–ï –û–ë–£–ß–ï–ù–ò–ï –° –†–ï–ê–õ–¨–ù–´–ú–ò –î–ê–ù–ù–´–ú–ò (–ò–°–ü–†–ê–í–õ–ï–ù–ò–ï –ü–ï–†–ï–û–ë–£–ß–ï–ù–ò–Ø)"
                            ;;
                        "--size=mixed-conservative")
                            start_task "train_mixed_conservative" \
                                'source .venv/bin/activate && python src/pipeline/training/train_with_mixed_noisy_data.py --variant=conservative' \
                                "üß† –û–ë–£–ß–ï–ù–ò–ï –ù–ê –ö–û–ù–°–ï–†–í–ê–¢–ò–í–ù–û –°–ú–ï–®–ê–ù–ù–´–• –î–ê–ù–ù–´–•"
                            ;;
                        "--size=mixed-moderate")
                            start_task "train_mixed_moderate" \
                                'source .venv/bin/activate && python src/pipeline/training/train_with_mixed_noisy_data.py --variant=moderate' \
                                "üß† –û–ë–£–ß–ï–ù–ò–ï –ù–ê –£–ú–ï–†–ï–ù–ù–û –°–ú–ï–®–ê–ù–ù–´–• –î–ê–ù–ù–´–•"
                            ;;
                        "--size=mixed-aggressive")
                            start_task "train_mixed_aggressive" \
                                'source .venv/bin/activate && python src/pipeline/training/train_with_mixed_noisy_data.py --variant=aggressive' \
                                "üß† –û–ë–£–ß–ï–ù–ò–ï –ù–ê –ê–ì–†–ï–°–°–ò–í–ù–û –°–ú–ï–®–ê–ù–ù–´–• –î–ê–ù–ù–´–•"
                            ;;
                        "--size=mixed-extreme")
                            start_task "train_mixed_extreme" \
                                'source .venv/bin/activate && python src/pipeline/training/train_with_mixed_noisy_data.py --variant=extreme' \
                                "üß† –û–ë–£–ß–ï–ù–ò–ï –ù–ê –≠–ö–°–¢–†–ï–ú–ê–õ–¨–ù–û –°–ú–ï–®–ê–ù–ù–´–• –î–ê–ù–ù–´–•"
                            ;;
                        "--size=mixed-all")
                            start_task "train_mixed_all" \
                                'source .venv/bin/activate && python src/pipeline/training/train_with_mixed_noisy_data.py --variant=conservative && python src/pipeline/training/train_with_mixed_noisy_data.py --variant=moderate && python src/pipeline/training/train_with_mixed_noisy_data.py --variant=aggressive && python src/pipeline/training/train_with_mixed_noisy_data.py --variant=extreme' \
                                "üß† –û–ë–£–ß–ï–ù–ò–ï –ù–ê –í–°–ï–• –í–ê–†–ò–ê–ù–¢–ê–• –°–ú–ï–®–ê–ù–ù–´–• –î–ê–ù–ù–´–•"
                            ;;
                        "--size=mixed-fixed")
                            start_task "train_mixed_fixed" \
                                'source .venv/bin/activate && python src/pipeline/training/train_with_mixed_data_fixed.py --variant=conservative' \
                                "üß† –û–ë–£–ß–ï–ù–ò–ï –ù–ê –ò–°–ü–†–ê–í–õ–ï–ù–ù–´–• –°–ú–ï–®–ê–ù–ù–´–• –î–ê–ù–ù–´–•"
                            ;;
                        *)
                            print_error "–ù–µ–∏–∑–≤–µ—Å—Ç–Ω—ã–π —Ä–∞–∑–º–µ—Ä –º–æ–¥–µ–ª–∏: $3"
                            print_info "–î–æ—Å—Ç—É–ø–Ω—ã–µ —Ä–∞–∑–º–µ—Ä—ã: --size=small, --size=medium, --size=large, --size=real, --size=mixed-conservative, --size=mixed-moderate, --size=mixed-aggressive, --size=mixed-extreme, --size=mixed-all, --size=mixed-fixed"
                            exit 1
                            ;;
                    esac
                    ;;
                "test")
                    start_task "test_model" \
                        'source .venv/bin/activate && python src/utils/generate_unique_model_name.py' \
                        "üß™ –¢–ï–°–¢–ò–†–û–í–ê–ù–ò–ï –ú–û–î–ï–õ–ò"
                    ;;
                "deploy")
                    print_header "üöÄ –†–ê–ó–í–ï–†–¢–´–í–ê–ù–ò–ï –ú–û–î–ï–õ–ò"
                    print_info "–ö–æ–ø–∏—Ä–æ–≤–∞–Ω–∏–µ –º–æ–¥–µ–ª–∏ –≤ ESPHome –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é..."
                    
                    # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—É—â–µ—Å—Ç–≤–æ–≤–∞–Ω–∏–µ —Ñ–∞–π–ª–æ–≤
                    if [ -f "/home/microWakeWord_data/models/current/original_library_model.tflite" ]; then
                        cp /home/microWakeWord_data/models/current/original_library_model.tflite config/esp32/
                        cp /home/microWakeWord_data/models/current/original_library_model.json config/esp32/
                        print_status "–ú–æ–¥–µ–ª—å —Ä–∞–∑–≤–µ—Ä–Ω—É—Ç–∞ –≤ config/esp32/"
                    else
                        print_error "–ú–æ–¥–µ–ª—å –Ω–µ –Ω–∞–π–¥–µ–Ω–∞! –°–Ω–∞—á–∞–ª–∞ –æ–±—É—á–∏—Ç–µ –º–æ–¥–µ–ª—å."
                        print_info "–ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ: ./manage.sh model train"
                        exit 1
                    fi
                    ;;
                *)
                    print_error "–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –∫–æ–º–∞–Ω–¥–∞ –º–æ–¥–µ–ª–∏: $2"
                    print_info "–î–æ—Å—Ç—É–ø–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã: train, test, deploy"
                    exit 1
                    ;;
            esac
            ;;
        "system")
            case "$2" in
                "monitor")
                    print_header "üìà –ú–û–ù–ò–¢–û–†–ò–ù–ì –°–ò–°–¢–ï–ú–´"
                    bash src/monitoring/auto_monitor.sh
                    ;;
                "health")
                    print_header "üè• –ü–†–û–í–ï–†–ö–ê –ó–î–û–†–û–í–¨–Ø –°–ò–°–¢–ï–ú–´"
                    echo "üìä –°–∏—Å—Ç–µ–º–Ω—ã–µ —Ä–µ—Å—É—Ä—Å—ã:"
                    echo "  CPU: $(top -bn1 | grep "Cpu(s)" | awk '{print $2}' | cut -d'%' -f1)%"
                    echo "  RAM: $(free | grep Mem | awk '{printf "%.1f%%", $3/$2 * 100.0}')"
                    echo "  –î–∏—Å–∫: $(df -h /home/microWakeWord_data | tail -1 | awk '{print $5}')"
                    ;;
                "backup")
                    print_header "üíæ –†–ï–ó–ï–†–í–ù–û–ï –ö–û–ü–ò–†–û–í–ê–ù–ò–ï"
                    timestamp=$(date +%Y%m%d_%H%M%S)
                    tar -czf "backup_${timestamp}.tar.gz" src/ config/ scripts/ docs/
                    print_status "–†–µ–∑–µ—Ä–≤–Ω–∞—è –∫–æ–ø–∏—è —Å–æ–∑–¥–∞–Ω–∞: backup_${timestamp}.tar.gz"
                    ;;
                *)
                    print_error "–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –∫–æ–º–∞–Ω–¥–∞ —Å–∏—Å—Ç–µ–º—ã: $2"
                    print_info "–î–æ—Å—Ç—É–ø–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã: monitor, health, backup"
                    exit 1
                    ;;
            esac
            ;;
        "help"|"--help"|"")
            print_header "üÜò –°–ü–†–ê–í–ö–ê –ü–û MICROWAKEWORD"
            
            echo "–ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ: ./manage.sh <–∫–∞—Ç–µ–≥–æ—Ä–∏—è> <–∫–æ–º–∞–Ω–¥–∞> [–æ–ø—Ü–∏–∏]"
            echo ""
            echo "–ö–∞—Ç–µ–≥–æ—Ä–∏–∏ –∏ –∫–æ–º–∞–Ω–¥—ã:"
            echo ""
            echo "üìä –ü–ê–ô–ü–õ–ê–ô–ù:"
            echo "  ./manage.sh pipeline start [--parallel|--cyclic|--sequential]"
            echo "  ./manage.sh pipeline status"
            echo "  ./manage.sh pipeline logs [task_name]"
            echo "  ./manage.sh pipeline stop [task_name|--all]"
            echo "  ./manage.sh pipeline cleanup"
            echo ""
            echo "üìÅ –î–ê–ù–ù–´–ï:"
            echo "  ./manage.sh data generate [--quick|--tts]"
            echo "  ./manage.sh data augment"
            echo "  ./manage.sh data balance"
            echo ""
            echo "üß† –ú–û–î–ï–õ–¨:"
            echo "  ./manage.sh model train [--size=small|medium|large]"
            echo "  ./manage.sh model test"
            echo "  ./manage.sh model deploy"
            echo ""
            echo "‚öôÔ∏è –°–ò–°–¢–ï–ú–ê:"
            echo "  ./manage.sh system monitor"
            echo "  ./manage.sh system health"
            echo "  ./manage.sh system backup"
            echo ""
            echo "–ü—Ä–∏–º–µ—Ä—ã:"
            echo "  ./manage.sh pipeline start --parallel    # –ü–∞—Ä–∞–ª–ª–µ–ª—å–Ω—ã–π –ø–∞–π–ø–ª–∞–π–Ω"
            echo "  ./manage.sh data generate --quick       # –ë—ã—Å—Ç—Ä–∞—è –≥–µ–Ω–µ—Ä–∞—Ü–∏—è"
            echo "  ./manage.sh model train --size=large    # –ë–æ–ª—å—à–∞—è –º–æ–¥–µ–ª—å"
            echo "  ./manage.sh system health               # –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å–∏—Å—Ç–µ–º—ã"
            echo ""
            echo "üö® –ö–†–ò–¢–ò–ß–ï–°–ö–ò–ï –ü–†–ê–í–ò–õ–ê:"
            echo "  ‚úÖ –í–°–ï–ì–î–ê –¢–û–õ–¨–ö–û –ß–ï–†–ï–ó –°–ò–°–¢–ï–ú–£ –¢–ê–°–ö–û–í!"
            echo "  ‚úÖ –í–°–ï–ì–î–ê –ò–°–ü–û–õ–¨–ó–£–ô–¢–ï VENV!"
            echo "  ‚úÖ Wake Word —Å–ø–µ—Ü–∏—Ñ–∏–∫–∞ (–¥–∏—Å–±–∞–ª–∞–Ω—Å 100:1 - —ç—Ç–æ –Ω–æ—Ä–º–∞!)"
            echo "  ‚úÖ –ù–ò–ö–û–ì–î–ê –ù–ï –ë–õ–û–ö–ò–†–£–ô–¢–ï –¢–ï–†–ú–ò–ù–ê–õ!"
            echo "  ‚úÖ –í–°–ï –ó–ê–î–ê–ß–ò –í–´–ü–û–õ–ù–Ø–Æ–¢–°–Ø –í –§–û–ù–ï!"
            echo ""
            echo "üìã –£–ü–†–ê–í–õ–ï–ù–ò–ï –ó–ê–î–ê–ß–ê–ú–ò:"
            echo "  ./manage.sh pipeline status              # –°—Ç–∞—Ç—É—Å –≤—Å–µ—Ö –∑–∞–¥–∞—á"
            echo "  ./manage.sh pipeline logs <task_name>  # –õ–æ–≥–∏ –∫–æ–Ω–∫—Ä–µ—Ç–Ω–æ–π –∑–∞–¥–∞—á–∏"
            echo "  ./manage.sh pipeline stop <task_name>   # –û—Å—Ç–∞–Ω–æ–≤–∫–∞ –∑–∞–¥–∞—á–∏"
            echo "  ./manage.sh pipeline cleanup             # –û—á–∏—Å—Ç–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–Ω—ã—Ö"
            ;;
        *)
            print_error "–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –∫–∞—Ç–µ–≥–æ—Ä–∏—è: $1"
            print_info "–ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ: ./manage.sh help"
            exit 1
            ;;
    esac
}

# –ó–∞–ø—É—Å–∫ –æ—Å–Ω–æ–≤–Ω–æ–π —Ñ—É–Ω–∫—Ü–∏–∏
main "$@"