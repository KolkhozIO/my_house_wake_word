#!/usr/bin/env python3
"""
–ü—Ä–æ—Å—Ç–∞—è –∫–æ–Ω–≤–µ—Ä—Ç–∞—Ü–∏—è SavedModel –≤ TFLite –¥–ª—è microWakeWord
"""

import sys
import os
sys.path.append('/home/microWakeWord')

import tensorflow as tf
from pathlib import Path

def convert_savedmodel_to_tflite():
    """–ö–æ–Ω–≤–µ—Ä—Ç–∏—Ä—É–µ—Ç SavedModel –≤ TFLite"""
    
    # –ü—É—Ç–∏
    savedmodel_dir = "/home/microWakeWord_data/trained_models/wakeword/non_stream"
    output_dir = "/home/microWakeWord_data/trained_models/wakeword"
    
    print("üîÑ –ö–æ–Ω–≤–µ—Ä—Ç–∞—Ü–∏—è SavedModel –≤ TFLite...")
    
    try:
        # –ó–∞–≥—Ä—É–∂–∞–µ–º SavedModel
        print(f"üìÅ –ó–∞–≥—Ä—É–∑–∫–∞ SavedModel –∏–∑: {savedmodel_dir}")
        model = tf.saved_model.load(savedmodel_dir)
        
        # –ü–æ–ª—É—á–∞–µ–º —Ñ—É–Ω–∫—Ü–∏—é –∏–Ω—Ñ–µ—Ä–µ–Ω—Å–∞
        infer_func = model.signatures['serving_default']
        
        # –°–æ–∑–¥–∞–µ–º –∫–æ–Ω–≤–µ—Ä—Ç–µ—Ä
        converter = tf.lite.TFLiteConverter.from_concrete_functions([infer_func])
        
        # –ù–∞—Å—Ç—Ä–æ–π–∫–∏ –∫–æ–Ω–≤–µ—Ä—Ç–µ—Ä–∞
        converter.optimizations = [tf.lite.Optimize.DEFAULT]
        converter.target_spec.supported_types = [tf.float32]
        
        # –ö–æ–Ω–≤–µ—Ä—Ç–∏—Ä—É–µ–º
        print("üîÑ –ö–æ–Ω–≤–µ—Ä—Ç–∞—Ü–∏—è...")
        tflite_model = converter.convert()
        
        # –°–æ—Ö—Ä–∞–Ω—è–µ–º
        tflite_path = os.path.join(output_dir, "model.tflite")
        with open(tflite_path, 'wb') as f:
            f.write(tflite_model)
        
        print(f"‚úÖ TFLite –º–æ–¥–µ–ª—å —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∞: {tflite_path}")
        print(f"üìä –†–∞–∑–º–µ—Ä –º–æ–¥–µ–ª–∏: {len(tflite_model) / 1024:.1f} KB")
        
        return True
        
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –∫–æ–Ω–≤–µ—Ä—Ç–∞—Ü–∏–∏: {e}")
        return False

if __name__ == "__main__":
    success = convert_savedmodel_to_tflite()
    if success:
        print("üéâ –ö–æ–Ω–≤–µ—Ä—Ç–∞—Ü–∏—è –∑–∞–≤–µ—Ä—à–µ–Ω–∞ —É—Å–ø–µ—à–Ω–æ!")
    else:
        print("‚ùå –ö–æ–Ω–≤–µ—Ä—Ç–∞—Ü–∏—è –∑–∞–≤–µ—Ä—à–∏–ª–∞—Å—å —Å –æ—à–∏–±–∫–∞–º–∏")
        sys.exit(1)