#!/bin/bash
# –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –∑–∞–¥–∞—á–∞–º–∏ microWakeWord

case "$1" in
    "start")
        if [ -z "$2" ]; then
            echo "üöÄ –ó–∞–ø—É—Å–∫ –ø–æ–ª–Ω–æ–≥–æ –ø–∞–π–ø–ª–∞–π–Ω–∞ (–Ω–µ–±–ª–æ–∫–∏—Ä—É—é—â–∏–π)..."
            source .venv/bin/activate && python start_pipeline.py
        else
            echo "üöÄ –ó–∞–ø—É—Å–∫ –∑–∞–¥–∞—á–∏ '$2'..."
            case "$2" in
                "generate_data")
                    source .venv/bin/activate && python task_manager.py start generate_data 'python generate_both_phrases.py > /home/microWakeWord_data/tasks/generate_data.log 2>&1'
                    ;;
                "augmentations")
                    source .venv/bin/activate && python task_manager.py start augmentations 'python apply_augmentations.py > /home/microWakeWord_data/tasks/augmentations.log 2>&1'
                    ;;
                "balance_dataset")
                    source .venv/bin/activate && python task_manager.py start balance_dataset 'python balance_dataset.py > /home/microWakeWord_data/tasks/balance_dataset.log 2>&1'
                    ;;
        "train_model")
            # –ü–æ–ª—É—á–∞–µ–º –æ–ø–∏—Å–∞–Ω–∏–µ –∏–∑–º–µ–Ω–µ–Ω–∏–π –∏–∑ –∞—Ä–≥—É–º–µ–Ω—Ç–æ–≤
            shift  # –£–±–∏—Ä–∞–µ–º "train_model" –∏–∑ –∞—Ä–≥—É–º–µ–Ω—Ç–æ–≤
            description="$*"
            if [ -n "$description" ]; then
                echo "üìù –û–ø–∏—Å–∞–Ω–∏–µ –∏–∑–º–µ–Ω–µ–Ω–∏–π: $description"
                source .venv/bin/activate && python task_manager.py start train_model "python use_original_library_correctly.py '$description' > /home/microWakeWord_data/tasks/train_model.log 2>&1"
            else
                echo "‚ö†Ô∏è –û–ø–∏—Å–∞–Ω–∏–µ –∏–∑–º–µ–Ω–µ–Ω–∏–π –Ω–µ —É–∫–∞–∑–∞–Ω–æ - –±—É–¥–µ—Ç –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–æ –±–∞–∑–æ–≤–æ–µ –∏–º—è"
                source .venv/bin/activate && python task_manager.py start train_model 'python use_original_library_correctly.py > /home/microWakeWord_data/tasks/train_model.log 2>&1'
            fi
            ;;
                "generate_spectrograms")
                    source .venv/bin/activate && python task_manager.py start generate_spectrograms 'python generate_spectrograms.py > /home/microWakeWord_data/tasks/generate_spectrograms.log 2>&1'
                    ;;
                "generate_spectrograms_parallel")
                    source .venv/bin/activate && python task_manager.py start generate_spectrograms_parallel 'python generate_spectrograms_parallel.py > generate_spectrograms_parallel.log 2>&1'
                    ;;
                "train_model_parallel")
                    source .venv/bin/activate && python task_manager.py start train_model_parallel 'python train_model_parallel.py > train_model_parallel.log 2>&1'
                    ;;
                "train_model_only")
                    source .venv/bin/activate && python task_manager.py start train_model_only 'python train_model_only.py > train_model_only.log 2>&1'
                    ;;
                "train_model_fixed")
                    # –ü–æ–ª—É—á–∞–µ–º –æ–ø–∏—Å–∞–Ω–∏–µ –∏–∑–º–µ–Ω–µ–Ω–∏–π –∏–∑ –∞—Ä–≥—É–º–µ–Ω—Ç–æ–≤
                    shift  # –£–±–∏—Ä–∞–µ–º "train_model_fixed" –∏–∑ –∞—Ä–≥—É–º–µ–Ω—Ç–æ–≤
                    description="$*"
                    if [ -n "$description" ]; then
                        echo "üìù –û–ø–∏—Å–∞–Ω–∏–µ –∏–∑–º–µ–Ω–µ–Ω–∏–π: $description"
                        source .venv/bin/activate && python task_manager.py start train_model_fixed "python use_original_library_correctly_fixed.py '$description' > train_model_fixed.log 2>&1"
                    else
                        echo "‚ö†Ô∏è –û–ø–∏—Å–∞–Ω–∏–µ –∏–∑–º–µ–Ω–µ–Ω–∏–π –Ω–µ —É–∫–∞–∑–∞–Ω–æ - –±—É–¥–µ—Ç –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–æ –±–∞–∑–æ–≤–æ–µ –∏–º—è"
                        source .venv/bin/activate && python task_manager.py start train_model_fixed 'python use_original_library_correctly_fixed.py > train_model_fixed.log 2>&1'
                    fi
                    ;;
                "generate_ambient")
                    source .venv/bin/activate && python task_manager.py start generate_ambient 'python generate_ambient_only.py > generate_ambient.log 2>&1'
                    ;;
                "generate_ambient_parallel")
                    source .venv/bin/activate && python task_manager.py start generate_ambient_parallel 'python generate_ambient_only.py > generate_ambient_parallel.log 2>&1'
                    ;;
                "fix_sample_rate")
                    source .venv/bin/activate && python task_manager.py start fix_sample_rate 'python fix_sample_rate.py > fix_sample_rate.log 2>&1'
                    ;;
                "fix_sample_rate_python")
                    source .venv/bin/activate && python task_manager.py start fix_sample_rate_python 'python fix_sample_rate_python.py > fix_sample_rate_python.log 2>&1'
                    ;;
                "fix_sample_rate_to_16000")
                    source .venv/bin/activate && python task_manager.py start fix_sample_rate_to_16000 'python fix_sample_rate_to_16000.py > fix_sample_rate_to_16000.log 2>&1'
                    ;;
                "train_larger")
                    source .venv/bin/activate && python task_manager.py start train_larger 'python train_larger_model.py > train_larger.log 2>&1'
                    ;;
                "generate_hard_negatives")
                    source .venv/bin/activate && python task_manager.py start generate_hard_negatives 'python generate_hard_negatives.py > hard_negatives.log 2>&1'
                    ;;
                "generate_enhanced_positives")
                    source .venv/bin/activate && python task_manager.py start generate_enhanced_positives 'python generate_enhanced_positives.py > enhanced_positives.log 2>&1'
                    ;;
                "generate_background")
                    source .venv/bin/activate && python task_manager.py start generate_background 'python generate_background_data.py > background_data.log 2>&1'
                    ;;
                "generate_hard_negatives_parallel")
                    source .venv/bin/activate && python task_manager.py start generate_hard_negatives_parallel 'python generate_hard_negatives_parallel.py > hard_negatives_parallel.log 2>&1'
                    ;;
                "normalize_audio_formats")
                    source .venv/bin/activate && python task_manager.py start normalize_audio_formats 'python normalize_audio_formats.py > normalize_audio_formats.log 2>&1'
                    ;;
                "generate_spectrograms_expanded")
                    source .venv/bin/activate && python task_manager.py start generate_spectrograms_expanded 'python generate_spectrograms_expanded.py > generate_spectrograms_expanded.log 2>&1'
                    ;;
                "train_model_expanded")
                    source .venv/bin/activate && python task_manager.py start train_model_expanded 'python train_model_expanded_logged.py > train_model_expanded.log 2>&1'
                    ;;
                "train_model_direct")
                    source .venv/bin/activate && python task_manager.py start train_model_direct 'rm -rf /home/microWakeWord_data/trained_models/wakeword/* && /home/microWakeWord/.venv/bin/python -m microwakeword.model_train_eval --training_config /home/microWakeWord_data/training_parameters.yaml --train 1 --restore_checkpoint 0 --test_tf_nonstreaming 0 --test_tflite_nonstreaming 0 --test_tflite_nonstreaming_quantized 0 --test_tflite_streaming 0 --test_tflite_streaming_quantized 0 inception > train_model_direct.log 2>&1'
                    ;;
                "generate_spectrograms_expanded_parallel")
                    source .venv/bin/activate && python task_manager.py start generate_spectrograms_expanded_parallel 'python generate_spectrograms_expanded_parallel.py > generate_spectrograms_expanded_parallel.log 2>&1'
                    ;;
                "train_model_fast")
                    source .venv/bin/activate && python task_manager.py start train_model_fast 'python train_model_fast.py > train_model_fast.log 2>&1'
                    ;;
                "generate_spectrograms_with_sampling")
                    source .venv/bin/activate && python task_manager.py start generate_spectrograms_with_sampling 'python generate_spectrograms_with_sampling.py > generate_spectrograms_with_sampling.log 2>&1'
                    ;;
                "generate_negatives_real")
                    source .venv/bin/activate && python task_manager.py start generate_negatives_real 'python generate_spectrograms_negatives_real.py > generate_negatives_real.log 2>&1'
                    ;;
        "generate_background_data")
            source .venv/bin/activate && python task_manager.py start generate_background_data 'python generate_spectrograms_background_data.py > generate_background_data.log 2>&1'
            ;;
        "generate_features")
            source .venv/bin/activate && python task_manager.py start generate_features 'python generate_features_from_samples.py > generate_features.log 2>&1'
            ;;
        "generate_model_name")
            if [ -z "$3" ]; then
                echo "‚ùå –ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ: ./manage_tasks.sh start generate_model_name '–∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π –æ–± –∏–∑–º–µ–Ω–µ–Ω–∏—è—Ö'"
                echo "–ü—Ä–∏–º–µ—Ä: ./manage_tasks.sh start generate_model_name 'max_coverage_sampling_840k_samples'"
                exit 1
            fi
            source .venv/bin/activate && python generate_unique_model_name.py "$3" > generate_model_name.log 2>&1
            ;;
                *)
                    echo "‚ùå –ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –∑–∞–¥–∞—á–∞: $2"
                    echo "–î–æ—Å—Ç—É–ø–Ω—ã–µ –∑–∞–¥–∞—á–∏: generate_data, augmentations, balance_dataset, train_model [–æ–ø–∏—Å–∞–Ω–∏–µ_–∏–∑–º–µ–Ω–µ–Ω–∏–π], generate_spectrograms, generate_spectrograms_parallel, train_model_parallel, train_model_only, train_larger, generate_hard_negatives, generate_enhanced_positives, generate_background, generate_hard_negatives_parallel, normalize_audio_formats, generate_spectrograms_expanded, train_model_expanded, generate_spectrograms_expanded_parallel, generate_spectrograms_with_sampling, generate_negatives_real, generate_background_data, fix_sample_rate_to_16000"
    echo ""
    echo "–ü—Ä–∏–º–µ—Ä—ã –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è train_model —Å –æ–ø–∏—Å–∞–Ω–∏–µ–º –∏–∑–º–µ–Ω–µ–Ω–∏–π:"
    echo "  ./manage_tasks.sh start train_model \"–∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ –Ω–æ–≤—ã—Ö —Å–µ–º–ø–ª–æ–≤\""
    echo "  ./manage_tasks.sh start train_model \"–æ–ø—Ç–∏–º–∏–∑–∞—Ü–∏—è batch_size\""
    echo "  ./manage_tasks.sh start train_model \"–Ω–æ–≤—ã–µ –∞—É–≥–º–µ–Ω—Ç–∞—Ü–∏–∏\""
                    exit 1
                    ;;
            esac
        fi
        ;;
    "status")
        echo "üìã –°—Ç–∞—Ç—É—Å –∑–∞–¥–∞—á:"
        source .venv/bin/activate && python task_manager.py status
        ;;
    "logs")
        if [ -z "$2" ]; then
            echo "‚ùå –ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ: $0 logs <–∏–º—è_–∑–∞–¥–∞—á–∏>"
            echo "–î–æ—Å—Ç—É–ø–Ω—ã–µ –∑–∞–¥–∞—á–∏: generate_data, augmentations, balance_dataset, train_model, train_larger, generate_hard_negatives, generate_enhanced_positives, generate_background, generate_spectrograms, generate_spectrograms_parallel, train_model_parallel, train_model_only, generate_ambient, generate_ambient_parallel, fix_sample_rate_to_16000"
            exit 1
        fi
        echo "üìÑ –õ–æ–≥–∏ –∑–∞–¥–∞—á–∏ '$2':"
        source .venv/bin/activate && python task_manager.py logs "$2"
        ;;
    "stop")
        if [ -z "$2" ]; then
            echo "‚ùå –ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ: $0 stop <–∏–º—è_–∑–∞–¥–∞—á–∏>"
            echo "–î–æ—Å—Ç—É–ø–Ω—ã–µ –∑–∞–¥–∞—á–∏: generate_data, augmentations, balance_dataset, train_model, train_larger, generate_hard_negatives, generate_enhanced_positives, generate_background, generate_spectrograms, generate_spectrograms_parallel, train_model_parallel, train_model_only, generate_ambient, generate_ambient_parallel"
            exit 1
        fi
        echo "üõë –û—Å—Ç–∞–Ω–æ–≤–∫–∞ –∑–∞–¥–∞—á–∏ '$2'..."
        source .venv/bin/activate && python task_manager.py stop "$2"
        ;;
    "stop-all")
        echo "üõë –û—Å—Ç–∞–Ω–æ–≤–∫–∞ –≤—Å–µ—Ö –∑–∞–¥–∞—á..."
        source .venv/bin/activate && python task_manager.py stop generate_data
        source .venv/bin/activate && python task_manager.py stop augmentations
        source .venv/bin/activate && python task_manager.py stop balance_dataset
        source .venv/bin/activate && python task_manager.py stop train_model
        source .venv/bin/activate && python task_manager.py stop train_larger
        source .venv/bin/activate && python task_manager.py stop generate_hard_negatives
        source .venv/bin/activate && python task_manager.py stop generate_enhanced_positives
        source .venv/bin/activate && python task_manager.py stop generate_background
        ;;
    "cleanup")
        echo "üßπ –û—á–∏—Å—Ç–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–Ω—ã—Ö –∑–∞–¥–∞—á..."
        source .venv/bin/activate && python task_manager.py cleanup
        ;;
    "help")
        echo "üìñ –ö–æ–º–∞–Ω–¥—ã —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –∑–∞–¥–∞—á–∞–º–∏:"
        echo "  $0 start          - –ó–∞–ø—É—Å–∫ –ø–æ–ª–Ω–æ–≥–æ –ø–∞–π–ø–ª–∞–π–Ω–∞"
        echo "  $0 status         - –°—Ç–∞—Ç—É—Å –≤—Å–µ—Ö –∑–∞–¥–∞—á"
        echo "  $0 logs <–∑–∞–¥–∞—á–∞>  - –õ–æ–≥–∏ –∫–æ–Ω–∫—Ä–µ—Ç–Ω–æ–π –∑–∞–¥–∞—á–∏"
        echo "  $0 stop <–∑–∞–¥–∞—á–∞>  - –û—Å—Ç–∞–Ω–æ–≤–∫–∞ –∫–æ–Ω–∫—Ä–µ—Ç–Ω–æ–π –∑–∞–¥–∞—á–∏"
        echo "  $0 stop-all       - –û—Å—Ç–∞–Ω–æ–≤–∫–∞ –≤—Å–µ—Ö –∑–∞–¥–∞—á"
        echo "  $0 cleanup        - –û—á–∏—Å—Ç–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–Ω—ã—Ö –∑–∞–¥–∞—á"
        echo "  $0 help           - –≠—Ç–∞ —Å–ø—Ä–∞–≤–∫–∞"
        echo ""
        echo "–î–æ—Å—Ç—É–ø–Ω—ã–µ –∑–∞–¥–∞—á–∏:"
        echo "  - generate_data   - –ì–µ–Ω–µ—Ä–∞—Ü–∏—è TTS –¥–∞–Ω–Ω—ã—Ö"
        echo "  - augmentations   - –ü—Ä–∏–º–µ–Ω–µ–Ω–∏–µ –∞—É–≥–º–µ–Ω—Ç–∞—Ü–∏–π"
        echo "  - balance_dataset - –ë–∞–ª–∞–Ω—Å–∏—Ä–æ–≤–∫–∞ –¥–∞—Ç–∞—Å–µ—Ç–∞"
        echo "  - train_model     - –û–±—É—á–µ–Ω–∏–µ –º–æ–¥–µ–ª–∏"
        echo "  - train_larger    - –û–±—É—á–µ–Ω–∏–µ –±–æ–ª—å—à–µ–π –º–æ–¥–µ–ª–∏"
        echo "  - generate_hard_negatives - –ì–µ–Ω–µ—Ä–∞—Ü–∏—è hard negative –ø—Ä–∏–º–µ—Ä–æ–≤"
        echo "  - generate_enhanced_positives - –ì–µ–Ω–µ—Ä–∞—Ü–∏—è —Ä–∞—Å—à–∏—Ä–µ–Ω–Ω—ã—Ö –ø–æ–∑–∏—Ç–∏–≤–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö"
        echo "  - generate_background - –ì–µ–Ω–µ—Ä–∞—Ü–∏—è —Ñ–æ–Ω–æ–≤—ã—Ö –¥–∞–Ω–Ω—ã—Ö"
        echo "  - generate_spectrograms - –ì–µ–Ω–µ—Ä–∞—Ü–∏—è —Å–ø–µ–∫—Ç—Ä–æ–≥—Ä–∞–º–º (–ø–æ–∑–∏—Ç–∏–≤–Ω—ã–µ + –Ω–µ–≥–∞—Ç–∏–≤–Ω—ã–µ)"
        echo "  - train_model_only - –û–±—É—á–µ–Ω–∏–µ –º–æ–¥–µ–ª–∏ (—Ç–æ–ª—å–∫–æ –æ–±—É—á–µ–Ω–∏–µ)"
        echo "  - generate_ambient - –ì–µ–Ω–µ—Ä–∞—Ü–∏—è ambient –¥–∞–Ω–Ω—ã—Ö (–æ—Ç–¥–µ–ª—å–Ω–æ)"
        echo "  - generate_ambient_parallel - –ì–µ–Ω–µ—Ä–∞—Ü–∏—è ambient –¥–∞–Ω–Ω—ã—Ö (–ø–∞—Ä–∞–ª–ª–µ–ª—å–Ω–æ –Ω–∞ –≤—Å–µ—Ö —è–¥—Ä–∞—Ö)"
        echo "  - generate_negatives_real - –ì–µ–Ω–µ—Ä–∞—Ü–∏—è —Å–µ–º–ø–ª–æ–≤ –¥–ª—è negatives_real (—Å –ø—Ä–æ–≤–µ—Ä–∫–æ–π —Å—É—â–µ—Å—Ç–≤—É—é—â–∏—Ö)"
        echo "  - generate_background_data - –ì–µ–Ω–µ—Ä–∞—Ü–∏—è —Å–µ–º–ø–ª–æ–≤ –¥–ª—è background_data (—Å –ø—Ä–æ–≤–µ—Ä–∫–æ–π —Å—É—â–µ—Å—Ç–≤—É—é—â–∏—Ö)"
        ;;
    *)
        echo "‚ùå –ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –∫–æ–º–∞–Ω–¥–∞: $1"
        echo "–ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ '$0 help' –¥–ª—è —Å–ø—Ä–∞–≤–∫–∏"
        exit 1
        ;;
esac