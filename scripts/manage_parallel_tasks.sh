#!/bin/bash
# –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –ø–∞—Ä–∞–ª–ª–µ–ª—å–Ω—ã–º –ø–∞–π–ø–ª–∞–π–Ω–æ–º microWakeWord

# –¶–≤–µ—Ç–∞ –¥–ª—è –≤—ã–≤–æ–¥–∞
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
BLUE='\033[0;34m'
PURPLE='\033[0;35m'
CYAN='\033[0;36m'
NC='\033[0m' # No Color

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –≤—ã–≤–æ–¥–∞ –∑–∞–≥–æ–ª–æ–≤–∫–æ–≤
print_header() {
    echo -e "${CYAN}================================${NC}"
    echo -e "${CYAN}$1${NC}"
    echo -e "${CYAN}================================${NC}"
}

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –≤—ã–≤–æ–¥–∞ —Å—Ç–∞—Ç—É—Å–∞
print_status() {
    echo -e "${GREEN}‚úÖ $1${NC}"
}

print_error() {
    echo -e "${RED}‚ùå $1${NC}"
}

print_warning() {
    echo -e "${YELLOW}‚ö†Ô∏è $1${NC}"
}

print_info() {
    echo -e "${BLUE}‚ÑπÔ∏è $1${NC}"
}

case "$1" in
    "start-parallel")
        print_header "üöÄ –ó–ê–ü–£–°–ö –ü–ê–†–ê–õ–õ–ï–õ–¨–ù–û–ì–û –ü–ê–ô–ü–õ–ê–ô–ù–ê"
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º —á—Ç–æ –º—ã –≤ –ø—Ä–∞–≤–∏–ª—å–Ω–æ–π –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏
        if [ ! -f "parallel_pipeline_manager.py" ]; then
            print_error "parallel_pipeline_manager.py –Ω–µ –Ω–∞–π–¥–µ–Ω!"
            print_info "–ó–∞–ø—É—Å—Ç–∏—Ç–µ –∏–∑ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏ microWakeWord"
            exit 1
        fi
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –≤–∏—Ä—Ç—É–∞–ª—å–Ω–æ–µ –æ–∫—Ä—É–∂–µ–Ω–∏–µ
        if [ ! -d ".venv" ]; then
            print_error "–í–∏—Ä—Ç—É–∞–ª—å–Ω–æ–µ –æ–∫—Ä—É–∂–µ–Ω–∏–µ –Ω–µ –Ω–∞–π–¥–µ–Ω–æ!"
            print_info "–°–æ–∑–¥–∞–π—Ç–µ –≤–∏—Ä—Ç—É–∞–ª—å–Ω–æ–µ –æ–∫—Ä—É–∂–µ–Ω–∏–µ: python -m venv .venv"
            exit 1
        fi
        
        print_info "–ê–∫—Ç–∏–≤–∞—Ü–∏—è –≤–∏—Ä—Ç—É–∞–ª—å–Ω–æ–≥–æ –æ–∫—Ä—É–∂–µ–Ω–∏—è..."
        source .venv/bin/activate
        
        print_info "–ü—Ä–æ–≤–µ—Ä–∫–∞ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π..."
        python -c "import psutil" 2>/dev/null || {
            print_warning "psutil –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω, —É—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º..."
            pip install psutil
        }
        
        print_status "–ó–∞–ø—É—Å–∫ –ø–∞—Ä–∞–ª–ª–µ–ª—å–Ω–æ–≥–æ –ø–∞–π–ø–ª–∞–π–Ω–∞..."
        print_info "–í—Å–µ —ç—Ç–∞–ø—ã –±—É–¥—É—Ç —Ä–∞–±–æ—Ç–∞—Ç—å –ø–∞—Ä–∞–ª–ª–µ–ª—å–Ω–æ –∏ –Ω–µ–ø—Ä–µ—Ä—ã–≤–Ω–æ"
        print_info "–õ–æ–≥–∏: /home/microWakeWord_data/parallel_pipeline.log"
        print_info "–ú–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥: ./manage_parallel_tasks.sh monitor"
        
        # –ó–∞–ø—É—Å–∫–∞–µ–º –ø–∞—Ä–∞–ª–ª–µ–ª—å–Ω—ã–π –ø–∞–π–ø–ª–∞–π–Ω
        python parallel_pipeline_manager.py
        ;;
        
    "start-parallel-bg")
        print_header "üöÄ –ó–ê–ü–£–°–ö –ü–ê–†–ê–õ–õ–ï–õ–¨–ù–û–ì–û –ü–ê–ô–ü–õ–ê–ô–ù–ê –í –§–û–ù–ï"
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º —á—Ç–æ –ø–∞–π–ø–ª–∞–π–Ω –Ω–µ –∑–∞–ø—É—â–µ–Ω —É–∂–µ
        if pgrep -f "parallel_pipeline_manager.py" > /dev/null; then
            print_warning "–ü–∞—Ä–∞–ª–ª–µ–ª—å–Ω—ã–π –ø–∞–π–ø–ª–∞–π–Ω —É–∂–µ –∑–∞–ø—É—â–µ–Ω!"
            print_info "PID: $(pgrep -f parallel_pipeline_manager.py)"
            exit 1
        fi
        
        print_info "–ó–∞–ø—É—Å–∫ –≤ —Ñ–æ–Ω–æ–≤–æ–º —Ä–µ–∂–∏–º–µ..."
        nohup python parallel_pipeline_manager.py > /home/microWakeWord_data/parallel_pipeline_bg.log 2>&1 &
        PIPELINE_PID=$!
        
        print_status "–ü–∞—Ä–∞–ª–ª–µ–ª—å–Ω—ã–π –ø–∞–π–ø–ª–∞–π–Ω –∑–∞–ø—É—â–µ–Ω –≤ —Ñ–æ–Ω–µ (PID: $PIPELINE_PID)"
        print_info "–õ–æ–≥–∏: /home/microWakeWord_data/parallel_pipeline_bg.log"
        print_info "–û—Å—Ç–∞–Ω–æ–≤–∫–∞: ./manage_parallel_tasks.sh stop-parallel"
        ;;
        
    "stop-parallel")
        print_header "üõë –û–°–¢–ê–ù–û–í–ö–ê –ü–ê–†–ê–õ–õ–ï–õ–¨–ù–û–ì–û –ü–ê–ô–ü–õ–ê–ô–ù–ê"
        
        # –ò—â–µ–º –ø—Ä–æ—Ü–µ—Å—Å—ã –ø–∞—Ä–∞–ª–ª–µ–ª—å–Ω–æ–≥–æ –ø–∞–π–ø–ª–∞–π–Ω–∞
        PIDS=$(pgrep -f "parallel_pipeline_manager.py")
        
        if [ -z "$PIDS" ]; then
            print_warning "–ü–∞—Ä–∞–ª–ª–µ–ª—å–Ω—ã–π –ø–∞–π–ø–ª–∞–π–Ω –Ω–µ –∑–∞–ø—É—â–µ–Ω"
            exit 0
        fi
        
        print_info "–ù–∞–π–¥–µ–Ω—ã –ø—Ä–æ—Ü–µ—Å—Å—ã: $PIDS"
        
        # –û—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –ø—Ä–æ—Ü–µ—Å—Å—ã
        for PID in $PIDS; do
            print_info "–û—Å—Ç–∞–Ω–æ–≤–∫–∞ –ø—Ä–æ—Ü–µ—Å—Å–∞ $PID..."
            kill -TERM $PID
            
            # –ñ–¥–µ–º graceful shutdown
            for i in {1..15}; do
                if ! kill -0 $PID 2>/dev/null; then
                    print_status "–ü—Ä–æ—Ü–µ—Å—Å $PID –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω"
                    break
                fi
                sleep 1
            done
            
            # –ü—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–∞—è –æ—Å—Ç–∞–Ω–æ–≤–∫–∞ –µ—Å–ª–∏ –Ω–µ –æ—Å—Ç–∞–Ω–æ–≤–∏–ª—Å—è
            if kill -0 $PID 2>/dev/null; then
                print_warning "–ü—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–∞—è –æ—Å—Ç–∞–Ω–æ–≤–∫–∞ –ø—Ä–æ—Ü–µ—Å—Å–∞ $PID..."
                kill -KILL $PID
            fi
        done
        
        # –û—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –≤—Å–µ –∑–∞–¥–∞—á–∏ —á–µ—Ä–µ–∑ task_manager
        print_info "–û—Å—Ç–∞–Ω–æ–≤–∫–∞ –≤—Å–µ—Ö –∑–∞–¥–∞—á..."
        python task_manager.py stop-all > /dev/null 2>&1
        
        print_status "–ü–∞—Ä–∞–ª–ª–µ–ª—å–Ω—ã–π –ø–∞–π–ø–ª–∞–π–Ω –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω"
        ;;
        
    "status")
        print_header "üìä –°–¢–ê–¢–£–° –ü–ê–†–ê–õ–õ–ï–õ–¨–ù–û–ì–û –ü–ê–ô–ü–õ–ê–ô–ù–ê"
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø–∞—Ä–∞–ª–ª–µ–ª—å–Ω—ã–π –ø–∞–π–ø–ª–∞–π–Ω
        PARALLEL_PIDS=$(pgrep -f "parallel_pipeline_manager.py")
        if [ -n "$PARALLEL_PIDS" ]; then
            print_status "–ü–∞—Ä–∞–ª–ª–µ–ª—å–Ω—ã–π –ø–∞–π–ø–ª–∞–π–Ω –∑–∞–ø—É—â–µ–Ω (PID: $PARALLEL_PIDS)"
        else
            print_warning "–ü–∞—Ä–∞–ª–ª–µ–ª—å–Ω—ã–π –ø–∞–π–ø–ª–∞–π–Ω –Ω–µ –∑–∞–ø—É—â–µ–Ω"
        fi
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –æ–±—ã—á–Ω—ã–µ –∑–∞–¥–∞—á–∏
        print_info "–ê–∫—Ç–∏–≤–Ω—ã–µ –∑–∞–¥–∞—á–∏:"
        python task_manager.py status 2>/dev/null || print_warning "task_manager –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω"
        
        # –°–∏—Å—Ç–µ–º–Ω—ã–µ —Ä–µ—Å—É—Ä—Å—ã
        print_info "–°–∏—Å—Ç–µ–º–Ω—ã–µ —Ä–µ—Å—É—Ä—Å—ã:"
        echo "  CPU: $(top -bn1 | grep "Cpu(s)" | awk '{print $2}' | cut -d'%' -f1)%"
        echo "  RAM: $(free | grep Mem | awk '{printf "%.1f%%", $3/$2 * 100.0}')"
        echo "  –î–∏—Å–∫: $(df -h /home/microWakeWord_data | tail -1 | awk '{print $5}')"
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –ª–æ–≥–∏
        if [ -f "/home/microWakeWord_data/parallel_pipeline.log" ]; then
            LOG_SIZE=$(du -h /home/microWakeWord_data/parallel_pipeline.log | cut -f1)
            print_info "–†–∞–∑–º–µ—Ä –ª–æ–≥–∞: $LOG_SIZE"
        fi
        ;;
        
    "logs")
        print_header "üìã –õ–û–ì–ò –ü–ê–†–ê–õ–õ–ï–õ–¨–ù–û–ì–û –ü–ê–ô–ü–õ–ê–ô–ù–ê"
        
        LOG_FILE="/home/microWakeWord_data/parallel_pipeline.log"
        BG_LOG_FILE="/home/microWakeWord_data/parallel_pipeline_bg.log"
        
        if [ -f "$LOG_FILE" ]; then
            print_info "–û—Å–Ω–æ–≤–Ω–æ–π –ª–æ–≥ ($LOG_FILE):"
            echo ""
            tail -50 "$LOG_FILE"
        elif [ -f "$BG_LOG_FILE" ]; then
            print_info "–§–æ–Ω–æ–≤—ã–π –ª–æ–≥ ($BG_LOG_FILE):"
            echo ""
            tail -50 "$BG_LOG_FILE"
        else
            print_warning "–õ–æ–≥–∏ –Ω–µ –Ω–∞–π–¥–µ–Ω—ã"
        fi
        ;;
        
    "monitor")
        print_header "üìà –ú–û–ù–ò–¢–û–†–ò–ù–ì –ü–ê–†–ê–õ–õ–ï–õ–¨–ù–û–ì–û –ü–ê–ô–ü–õ–ê–ô–ù–ê"
        
        print_info "–ú–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥ –ø–∞—Ä–∞–ª–ª–µ–ª—å–Ω–æ–≥–æ –ø–∞–π–ø–ª–∞–π–Ω–∞ (Ctrl+C –¥–ª—è –≤—ã—Ö–æ–¥–∞)..."
        echo ""
        
        while true; do
            clear
            print_header "üìä –ú–û–ù–ò–¢–û–†–ò–ù–ì –ü–ê–†–ê–õ–õ–ï–õ–¨–ù–û–ì–û –ü–ê–ô–ü–õ–ê–ô–ù–ê - $(date '+%H:%M:%S')"
            
            # –°—Ç–∞—Ç—É—Å –ø–∞–π–ø–ª–∞–π–Ω–∞
            PARALLEL_PIDS=$(pgrep -f "parallel_pipeline_manager.py")
            if [ -n "$PARALLEL_PIDS" ]; then
                print_status "–ü–∞—Ä–∞–ª–ª–µ–ª—å–Ω—ã–π –ø–∞–π–ø–ª–∞–π–Ω: –ó–ê–ü–£–©–ï–ù (PID: $PARALLEL_PIDS)"
            else
                print_warning "–ü–∞—Ä–∞–ª–ª–µ–ª—å–Ω—ã–π –ø–∞–π–ø–ª–∞–π–Ω: –û–°–¢–ê–ù–û–í–õ–ï–ù"
            fi
            
            # –ê–∫—Ç–∏–≤–Ω—ã–µ –∑–∞–¥–∞—á–∏
            echo ""
            print_info "–ê–∫—Ç–∏–≤–Ω—ã–µ –∑–∞–¥–∞—á–∏:"
            python task_manager.py status 2>/dev/null | grep -E "(üü¢|üî¥)" || echo "  –ù–µ—Ç –∞–∫—Ç–∏–≤–Ω—ã—Ö –∑–∞–¥–∞—á"
            
            # –°–∏—Å—Ç–µ–º–Ω—ã–µ —Ä–µ—Å—É—Ä—Å—ã
            echo ""
            print_info "–°–∏—Å—Ç–µ–º–Ω—ã–µ —Ä–µ—Å—É—Ä—Å—ã:"
            echo "  CPU: $(top -bn1 | grep "Cpu(s)" | awk '{print $2}' | cut -d'%' -f1)%"
            echo "  RAM: $(free | grep Mem | awk '{printf "%.1f%%", $3/$2 * 100.0}')"
            
            # –ü–æ—Å–ª–µ–¥–Ω–∏–µ –ª–æ–≥–∏
            echo ""
            print_info "–ü–æ—Å–ª–µ–¥–Ω–∏–µ —Å–æ–±—ã—Ç–∏—è:"
            if [ -f "/home/microWakeWord_data/parallel_pipeline.log" ]; then
                tail -5 "/home/microWakeWord_data/parallel_pipeline.log" | sed 's/^/  /'
            else
                echo "  –õ–æ–≥–∏ –Ω–µ –Ω–∞–π–¥–µ–Ω—ã"
            fi
            
            sleep 5
        done
        ;;
        
    "workers")
        print_header "üë• –°–¢–ê–¢–£–° –í–û–†–ö–ï–†–û–í"
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º —á—Ç–æ –ø–∞–π–ø–ª–∞–π–Ω –∑–∞–ø—É—â–µ–Ω
        if ! pgrep -f "parallel_pipeline_manager.py" > /dev/null; then
            print_warning "–ü–∞—Ä–∞–ª–ª–µ–ª—å–Ω—ã–π –ø–∞–π–ø–ª–∞–π–Ω –Ω–µ –∑–∞–ø—É—â–µ–Ω"
            exit 1
        fi
        
        print_info "–°—Ç–∞—Ç—É—Å –≤–æ—Ä–∫–µ—Ä–æ–≤ (–∏–∑ –ª–æ–≥–æ–≤):"
        echo ""
        
        if [ -f "/home/microWakeWord_data/parallel_pipeline.log" ]; then
            # –ò—â–µ–º —Å—Ç—Ä–æ–∫–∏ —Å–æ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–æ–π –≤–æ—Ä–∫–µ—Ä–æ–≤
            grep "–°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –≤–æ—Ä–∫–µ—Ä–æ–≤:" /home/microWakeWord_data/parallel_pipeline.log | tail -1
            echo ""
            grep "üîÑ.*- –¶–∏–∫–ª" /home/microWakeWord_data/parallel_pipeline.log | tail -10
        else
            print_warning "–õ–æ–≥–∏ –Ω–µ –Ω–∞–π–¥–µ–Ω—ã"
        fi
        ;;
        
    "config")
        print_header "‚öôÔ∏è –ö–û–ù–§–ò–ì–£–†–ê–¶–ò–Ø –ü–ê–†–ê–õ–õ–ï–õ–¨–ù–û–ì–û –ü–ê–ô–ü–õ–ê–ô–ù–ê"
        
        print_info "–ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è —ç—Ç–∞–ø–æ–≤ (–≤—Å–µ —Ä–∞–±–æ—Ç–∞—é—Ç –ø–∞—Ä–∞–ª–ª–µ–ª—å–Ω–æ):"
        echo ""
        echo "1. generate_data:"
        echo "   - –ò–Ω—Ç–µ—Ä–≤–∞–ª —Ü–∏–∫–ª–æ–≤: 5 –º–∏–Ω—É—Ç"
        echo "   - –†–µ—Å—É—Ä—Å—ã: 8 CPU, 2GB RAM"
        echo "   - –¢–∞–π–º–∞—É—Ç: 10 –º–∏–Ω—É—Ç"
        echo "   - –ó–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏: –Ω–µ—Ç"
        echo ""
        echo "2. generate_spectrograms:"
        echo "   - –ò–Ω—Ç–µ—Ä–≤–∞–ª —Ü–∏–∫–ª–æ–≤: 10 –º–∏–Ω—É—Ç"
        echo "   - –†–µ—Å—É—Ä—Å—ã: 16 CPU, 4GB RAM"
        echo "   - –¢–∞–π–º–∞—É—Ç: 30 –º–∏–Ω—É—Ç"
        echo "   - –ó–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏: —Å–≤–µ–∂–∏–µ –¥–∞–Ω–Ω—ã–µ"
        echo ""
        echo "3. augmentations:"
        echo "   - –ò–Ω—Ç–µ—Ä–≤–∞–ª —Ü–∏–∫–ª–æ–≤: 15 –º–∏–Ω—É—Ç"
        echo "   - –†–µ—Å—É—Ä—Å—ã: 4 CPU, 1GB RAM"
        echo "   - –¢–∞–π–º–∞—É—Ç: 20 –º–∏–Ω—É—Ç"
        echo "   - –ó–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏: –≥–æ—Ç–æ–≤—ã–µ —Å–ø–µ–∫—Ç—Ä–æ–≥—Ä–∞–º–º—ã"
        echo ""
        echo "4. balance_dataset:"
        echo "   - –ò–Ω—Ç–µ—Ä–≤–∞–ª —Ü–∏–∫–ª–æ–≤: 20 –º–∏–Ω—É—Ç"
        echo "   - –†–µ—Å—É—Ä—Å—ã: 4 CPU, 1GB RAM"
        echo "   - –¢–∞–π–º–∞—É—Ç: 15 –º–∏–Ω—É—Ç"
        echo "   - –ó–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏: –≥–æ—Ç–æ–≤—ã–µ —Å–ø–µ–∫—Ç—Ä–æ–≥—Ä–∞–º–º—ã"
        echo ""
        echo "5. train_model:"
        echo "   - –ò–Ω—Ç–µ—Ä–≤–∞–ª —Ü–∏–∫–ª–æ–≤: 30 –º–∏–Ω—É—Ç"
        echo "   - –†–µ—Å—É—Ä—Å—ã: 8 CPU, 3GB RAM"
        echo "   - –¢–∞–π–º–∞—É—Ç: 60 –º–∏–Ω—É—Ç"
        echo "   - –ó–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏: –≥–æ—Ç–æ–≤—ã–µ —Å–ø–µ–∫—Ç—Ä–æ–≥—Ä–∞–º–º—ã"
        echo ""
        print_info "–î–ª—è –∏–∑–º–µ–Ω–µ–Ω–∏—è –Ω–∞—Å—Ç—Ä–æ–µ–∫ –æ—Ç—Ä–µ–¥–∞–∫—Ç–∏—Ä—É–π—Ç–µ parallel_pipeline_manager.py"
        ;;
        
    "help"|"--help"|"")
        print_header "üÜò –°–ü–†–ê–í–ö–ê –ü–û –ü–ê–†–ê–õ–õ–ï–õ–¨–ù–û–ú–£ –ü–ê–ô–ü–õ–ê–ô–ù–£"
        
        echo "–ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ: ./manage_parallel_tasks.sh <–∫–æ–º–∞–Ω–¥–∞>"
        echo ""
        echo "–ö–æ–º–∞–Ω–¥—ã:"
        echo "  start-parallel      –ó–∞–ø—É—Å–∫ –ø–∞—Ä–∞–ª–ª–µ–ª—å–Ω–æ–≥–æ –ø–∞–π–ø–ª–∞–π–Ω–∞ (–∏–Ω—Ç–µ—Ä–∞–∫—Ç–∏–≤–Ω—ã–π)"
        echo "  start-parallel-bg   –ó–∞–ø—É—Å–∫ –ø–∞—Ä–∞–ª–ª–µ–ª—å–Ω–æ–≥–æ –ø–∞–π–ø–ª–∞–π–Ω–∞ –≤ —Ñ–æ–Ω–µ"
        echo "  stop-parallel       –û—Å—Ç–∞–Ω–æ–≤–∫–∞ –ø–∞—Ä–∞–ª–ª–µ–ª—å–Ω–æ–≥–æ –ø–∞–π–ø–ª–∞–π–Ω–∞"
        echo "  status              –°—Ç–∞—Ç—É—Å —Å–∏—Å—Ç–µ–º—ã –∏ –∑–∞–¥–∞—á"
        echo "  logs                –ü—Ä–æ—Å–º–æ—Ç—Ä –ª–æ–≥–æ–≤ –ø–∞–π–ø–ª–∞–π–Ω–∞"
        echo "  monitor             –ú–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥ –≤ —Ä–µ–∞–ª—å–Ω–æ–º –≤—Ä–µ–º–µ–Ω–∏"
        echo "  workers             –°—Ç–∞—Ç—É—Å –≤–æ—Ä–∫–µ—Ä–æ–≤"
        echo "  config              –ü–æ–∫–∞–∑–∞—Ç—å –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é"
        echo "  help                –ü–æ–∫–∞–∑–∞—Ç—å —ç—Ç—É —Å–ø—Ä–∞–≤–∫—É"
        echo ""
        echo "–ü—Ä–∏–º–µ—Ä—ã:"
        echo "  ./manage_parallel_tasks.sh start-parallel-bg  # –ó–∞–ø—É—Å–∫ –≤ —Ñ–æ–Ω–µ"
        echo "  ./manage_parallel_tasks.sh monitor             # –ú–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥"
        echo "  ./manage_parallel_tasks.sh workers            # –°—Ç–∞—Ç—É—Å –≤–æ—Ä–∫–µ—Ä–æ–≤"
        echo "  ./manage_parallel_tasks.sh stop-parallel      # –û—Å—Ç–∞–Ω–æ–≤–∫–∞"
        echo ""
        echo "–û—Å–æ–±–µ–Ω–Ω–æ—Å—Ç–∏ –ø–∞—Ä–∞–ª–ª–µ–ª—å–Ω–æ–≥–æ –ø–∞–π–ø–ª–∞–π–Ω–∞:"
        echo "  ‚úÖ –í—Å–µ —ç—Ç–∞–ø—ã —Ä–∞–±–æ—Ç–∞—é—Ç –ø–∞—Ä–∞–ª–ª–µ–ª—å–Ω–æ –∏ –Ω–µ–ø—Ä–µ—Ä—ã–≤–Ω–æ"
        echo "  ‚úÖ –ö–∞–∂–¥—ã–π —ç—Ç–∞–ø —Ä–∞–±–æ—Ç–∞–µ—Ç –≤ —Å–≤–æ–µ–º –ø–æ—Ç–æ–∫–µ"
        echo "  ‚úÖ –ù–µ–∑–∞–≤–∏—Å–∏–º—ã–µ —Ü–∏–∫–ª—ã –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è"
        echo "  ‚úÖ –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–µ –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏–µ –ø–æ—Å–ª–µ –æ—à–∏–±–æ–∫"
        echo "  ‚úÖ –ú–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥ —Å–∏—Å—Ç–µ–º–Ω—ã—Ö —Ä–µ—Å—É—Ä—Å–æ–≤"
        echo "  ‚úÖ Graceful shutdown –ø–æ Ctrl+C"
        echo ""
        echo "–≠—Ç–∞–ø—ã —Ä–∞–±–æ—Ç–∞—é—Ç –ø–æ –∫—Ä—É–≥—É:"
        echo "  üîÑ generate_data (–∫–∞–∂–¥—ã–µ 5 –º–∏–Ω)"
        echo "  üîÑ generate_spectrograms (–∫–∞–∂–¥—ã–µ 10 –º–∏–Ω)"
        echo "  üîÑ augmentations (–∫–∞–∂–¥—ã–µ 15 –º–∏–Ω)"
        echo "  üîÑ balance_dataset (–∫–∞–∂–¥—ã–µ 20 –º–∏–Ω)"
        echo "  üîÑ train_model (–∫–∞–∂–¥—ã–µ 30 –º–∏–Ω)"
        ;;
        
    *)
        print_error "–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –∫–æ–º–∞–Ω–¥–∞: $1"
        print_info "–ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ: ./manage_parallel_tasks.sh help"
        exit 1
        ;;
esac