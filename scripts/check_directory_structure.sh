#!/bin/bash

# –°–∫—Ä–∏–ø—Ç –ø—Ä–æ–≤–µ—Ä–∫–∏ —Ñ–∏–∫—Å–∏—Ä–æ–≤–∞–Ω–Ω–æ–π —Å—Ç—Ä—É–∫—Ç—É—Ä—ã –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–π microWakeWord
# –ù–ï –†–ï–î–ê–ö–¢–ò–†–û–í–ê–¢–¨ - –¢–û–õ–¨–ö–û –ß–ò–¢–ê–¢–¨!

echo "üîç –ü–†–û–í–ï–†–ö–ê –§–ò–ö–°–ò–†–û–í–ê–ù–ù–û–ô –°–¢–†–£–ö–¢–£–†–´ –î–ò–†–ï–ö–¢–û–†–ò–ô"
echo "=============================================="

# –¶–≤–µ—Ç–∞ –¥–ª—è –≤—ã–≤–æ–¥–∞
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
NC='\033[0m' # No Color

# –§—É–Ω–∫—Ü–∏—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏
check_directory() {
    local dir="$1"
    local required="$2"
    
    if [ -d "$dir" ]; then
        echo -e "${GREEN}‚úÖ $dir${NC}"
        return 0
    else
        if [ "$required" = "true" ]; then
            echo -e "${RED}‚ùå –û–¢–°–£–¢–°–¢–í–£–ï–¢ –û–ë–Ø–ó–ê–¢–ï–õ–¨–ù–ê–Ø –î–ò–†–ï–ö–¢–û–†–ò–Ø: $dir${NC}"
            return 1
        else
            echo -e "${YELLOW}‚ö†Ô∏è  –û–¢–°–£–¢–°–¢–í–£–ï–¢ –û–ü–¶–ò–û–ù–ê–õ–¨–ù–ê–Ø –î–ò–†–ï–ö–¢–û–†–ò–Ø: $dir${NC}"
            return 0
        fi
    fi
}

# –§—É–Ω–∫—Ü–∏—è –ø—Ä–æ–≤–µ—Ä–∫–∏ —Ñ–∞–π–ª–∞
check_file() {
    local file="$1"
    local required="$2"
    
    if [ -f "$file" ]; then
        echo -e "${GREEN}‚úÖ $file${NC}"
        return 0
    else
        if [ "$required" = "true" ]; then
            echo -e "${RED}‚ùå –û–¢–°–£–¢–°–¢–í–£–ï–¢ –û–ë–Ø–ó–ê–¢–ï–õ–¨–ù–´–ô –§–ê–ô–õ: $file${NC}"
            return 1
        else
            echo -e "${YELLOW}‚ö†Ô∏è  –û–¢–°–£–¢–°–¢–í–£–ï–¢ –û–ü–¶–ò–û–ù–ê–õ–¨–ù–´–ô –§–ê–ô–õ: $file${NC}"
            return 0
        fi
    fi
}

echo ""
echo "üìÅ –û–°–ù–û–í–ù–´–ï –î–ò–†–ï–ö–¢–û–†–ò–ò:"
echo "======================"

# –û–±—è–∑–∞—Ç–µ–ª—å–Ω—ã–µ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏
check_directory "src" "true"
check_directory "src/pipeline" "true"
check_directory "src/pipeline/training" "true"
check_directory "src/pipeline/data_generation" "true"
check_directory "src/pipeline/augmentation" "true"
check_directory "src/pipeline/balancing" "true"
check_directory "src/management" "true"
check_directory "src/monitoring" "true"
check_directory "src/utils" "true"
check_directory "src/api" "true"
check_directory "src/cli" "true"
check_directory "src/web" "true"

check_directory "config" "true"
check_directory "docs" "true"
check_directory "scripts" "true"
check_directory "tests" "true"
check_directory "tools" "true"
check_directory "deployment" "true"

echo ""
echo "üìÑ –û–°–ù–û–í–ù–´–ï –§–ê–ô–õ–´:"
echo "=================="

# –û–±—è–∑–∞—Ç–µ–ª—å–Ω—ã–µ —Ñ–∞–π–ª—ã
check_file "manage.sh" "true"
check_file "manage_tasks.sh" "true"
check_file "requirements.txt" "true"
check_file "requirements-dev.txt" "true"

echo ""
echo "üìä –î–ê–ù–ù–´–ï –ò –ú–û–î–ï–õ–ò:"
echo "==================="

# –î–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏ —Å –¥–∞–Ω–Ω—ã–º–∏
check_directory "logs" "false"
check_directory "temp" "false"
check_directory "models" "false"
check_directory "trained_models" "false"
check_directory "generated_features" "false"
check_directory "generated_features_negatives_real" "false"
check_directory "positives_both_aug_temp" "false"

echo ""
echo "üîÑ –†–ï–ó–ï–†–í–ù–´–ï –ö–û–ü–ò–ò:"
echo "==================="

check_directory "backups" "false"
check_directory "mww_orig" "false"
check_directory "piper-sample-generator" "false"

echo ""
echo "üéØ –ö–õ–Æ–ß–ï–í–´–ï –°–ö–†–ò–ü–¢–´ –û–ë–£–ß–ï–ù–ò–Ø:"
echo "=============================="

# –û—Å–Ω–æ–≤–Ω—ã–µ —Å–∫—Ä–∏–ø—Ç—ã –æ–±—É—á–µ–Ω–∏—è
check_file "src/pipeline/training/use_original_library_correctly.py" "true"
check_file "src/pipeline/training/train_model_only.py" "true"
check_file "src/pipeline/training/use_original_library_correctly_fixed.py" "false"

echo ""
echo "üìà –°–ö–†–ò–ü–¢–´ –ì–ï–ù–ï–†–ê–¶–ò–ò –î–ê–ù–ù–´–•:"
echo "============================"

# –û—Å–Ω–æ–≤–Ω—ã–µ —Å–∫—Ä–∏–ø—Ç—ã –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏
check_file "src/pipeline/data_generation/generate_spectrograms.py" "true"
check_file "src/pipeline/data_generation/generate_both_phrases.py" "true"
check_file "src/pipeline/data_generation/quick_generate.py" "true"

echo ""
echo "‚öôÔ∏è –ú–ï–ù–ï–î–ñ–ï–†–´ –ó–ê–î–ê–ß:"
echo "==================="

# –ú–µ–Ω–µ–¥–∂–µ—Ä—ã –∑–∞–¥–∞—á
check_file "src/management/task_manager.py" "true"
check_file "src/management/run_pipeline.py" "true"
check_file "src/management/start_pipeline.py" "true"

echo ""
echo "üîß –£–¢–ò–õ–ò–¢–´:"
echo "============"

# –£—Ç–∏–ª–∏—Ç—ã
check_file "src/utils/config_manager.py" "true"
check_file "src/utils/generate_unique_model_name.py" "true"

echo ""
echo "üìã –°–¢–ê–¢–£–° –ü–†–û–í–ï–†–ö–ò:"
echo "==================="

# –ü–æ–¥—Å—á–µ—Ç –æ—à–∏–±–æ–∫
errors=0
if [ $? -ne 0 ]; then
    errors=$((errors + 1))
fi

if [ $errors -eq 0 ]; then
    echo -e "${GREEN}‚úÖ –°–¢–†–£–ö–¢–£–†–ê –î–ò–†–ï–ö–¢–û–†–ò–ô –°–û–û–¢–í–ï–¢–°–¢–í–£–ï–¢ –§–ò–ö–°–ò–†–û–í–ê–ù–ù–û–ô!${NC}"
    echo -e "${GREEN}‚úÖ –í–°–ï –û–ë–Ø–ó–ê–¢–ï–õ–¨–ù–´–ï –ö–û–ú–ü–û–ù–ï–ù–¢–´ –ù–ê –ú–ï–°–¢–ï!${NC}"
    exit 0
else
    echo -e "${RED}‚ùå –û–ë–ù–ê–†–£–ñ–ï–ù–´ –û–¢–°–£–¢–°–¢–í–£–Æ–©–ò–ï –ö–û–ú–ü–û–ù–ï–ù–¢–´!${NC}"
    echo -e "${RED}‚ùå –°–¢–†–£–ö–¢–£–†–ê –ù–ï –°–û–û–¢–í–ï–¢–°–¢–í–£–ï–¢ –§–ò–ö–°–ò–†–û–í–ê–ù–ù–û–ô!${NC}"
    exit 1
fi